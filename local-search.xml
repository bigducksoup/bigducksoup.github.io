<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>每日面经2023-06-29</title>
    <link href="/2023/06/29/Interview-Exp-2023-06-29/"/>
    <url>/2023/06/29/Interview-Exp-2023-06-29/</url>
    
    <content type="html"><![CDATA[<h1 id="字节-商业技术"><a href="#字节-商业技术" class="headerlink" title="字节-商业技术"></a>字节-商业技术</h1><p>来源：牛客 小小啊啊啊啊</p><p><a href="https://www.nowcoder.com/feed/main/detail/d49c548611cc47e28ed8bd96db906ba3?sourceSSR=users">https://www.nowcoder.com/feed/main/detail/d49c548611cc47e28ed8bd96db906ba3?sourceSSR=users</a></p><h2 id="1-布隆过滤器怎么初始化的"><a href="#1-布隆过滤器怎么初始化的" class="headerlink" title="1.布隆过滤器怎么初始化的"></a>1.布隆过滤器怎么初始化的</h2><ol><li><p>确定预期元素数量：首先需要确定预期元素数量，即布隆过滤器将要处理多少个元素。这个数量将决定布隆过滤器的大小。</p></li><li><p>确定误差率：其次需要确定误差率，即布隆过滤器在判断一个元素是否存在时，可能出现的误判概率。误差率越小，布隆过滤器需要的空间就越大。</p></li><li><p>计算哈希函数个数：根据预期元素数量和误差率，可以计算出需要多少个哈希函数。通常情况下，哈希函数的个数与布隆过滤器的大小成正比。</p></li><li><p>创建位数组：根据布隆过滤器的大小，创建一个位数组。位数组中的每个位都被初始化为0。</p></li><li><p>选择哈希函数：根据计算出的哈希函数个数，选择相应数量的哈希函数。常用的哈希函数有MurmurHash、MD5、SHA等等。</p></li><li><p>将元素插入布隆过滤器：将要处理的元素插入到布隆过滤器中，具体方法是将元素依次经过哈希函数，得到哈希值，并将位数组中对应的位标记为1。</p></li></ol><h2 id="2-模糊检索怎么实现的"><a href="#2-模糊检索怎么实现的" class="headerlink" title="2.模糊检索怎么实现的"></a>2.模糊检索怎么实现的</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">&lt;mapper namespace=&quot;com.example.mapper.UserMapper&quot;&gt;<br>    &lt;<span class="hljs-keyword">select</span> id=&quot;searchByName&quot; parameterType=&quot;String&quot; resultType=&quot;User&quot;&gt;<br>        <span class="hljs-keyword">SELECT</span> * <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">WHERE</span> <span class="hljs-type">name</span> <span class="hljs-keyword">LIKE</span> CONCAT(<span class="hljs-string">&#x27;%&#x27;</span>, #&#123;keyword&#125;, <span class="hljs-string">&#x27;%&#x27;</span>)<br>    &lt;/<span class="hljs-keyword">select</span>&gt;<br>&lt;/mapper&gt;<br></code></pre></td></tr></table></figure><p>接收一个 String 类型的参数，表示需要查询的关键词。在对应的 XML 文件中，使用 SQL 语句来实现模糊查询的逻辑，其中 <code>CONCAT(&#39;%&#39;, #&#123;keyword&#125;, &#39;%&#39;)</code> 表示将 <code>%</code>、关键词和 <code>%</code> 连接起来，用于匹配包含关键词的字符串。</p><h2 id="3-B-树怎么实现的"><a href="#3-B-树怎么实现的" class="headerlink" title="3.B+树怎么实现的"></a>3.B+树怎么实现的</h2><p>首先看BTree</p><p><img src="/../img/Interview-Exp-2023-06-29/BTree.png" alt="BTree"></p><p>再来看B+Tree</p><p><img src="/../img/Interview-Exp-2023-06-29/B+Tree.png" alt="B+Tree"></p><ol><li><p>B+树上除叶子节点其他节点是不存储数据的。B树上每个节点都存储了key和data。而B+树只在叶子节点上存储数据，其他节点只存储key。<br>为什么要进行这样的改变呢？<br>以innoDB存储引擎来说，数据库中页的大小是固定的，每页的默认大小为16K。如果页不存储数据(data)就可以存储更多的key,那么就可以尽可能的减少树的高度。总结来说B+树相对于B树来说又矮又胖。这时候如果查询那么就会降低很多IO操作。<br>假定一个页16K可以存储1000个key。那么3层的B+树就可以存储100010001000&#x3D;10亿条数据。而且根节点是常驻内存的，也就是说查询10亿条数据只需要进行2次IO操作。</p></li><li><p>B+树所有的数据都存储在叶子节点上并且是按照顺序排列的。那么使用B+树完成范围查找，排序查找，分组查找，去重查找就会很简单，效率也比较高。而B树就不可以。因为B树的数据是分散个各个节点上的。</p></li><li><p>B+树上每页之间是一个双向链表进行链接，叶子节点中的数据都是使用单向链表链接的。但是需要记得一点的是B树也可以加链表。<br>PS：InnoDB存储引擎中索引就是这样存储的。InnoDB中的聚集索引就是上面的结构。需要记住一点是MyISAM中依然使用的是B+树，结构是一样的，原理也是一样的，区别在于存储不是数据而是数据的文件地址。</p></li></ol><h2 id="4-全局唯一-ID-怎么实现的"><a href="#4-全局唯一-ID-怎么实现的" class="headerlink" title="4.全局唯一 ID 怎么实现的"></a>4.全局唯一 ID 怎么实现的</h2><ol><li>基于时间戳：使用当前时间戳作为 ID 的一部分，可以保证在同一时刻生成的 ID 是唯一的。比如，可以使用 Unix 时间戳加上一个随机数或者自增序列来生成 ID。</li><li>基于 UUID：UUID（Universally Unique Identifier）是一种由网络软件工程师组织（IETF）定义的标准，它使用伪随机数来保证生成的 ID 是唯一的。常见的 UUID 版本有 1、3、4、5，其中版本 1 和 4 是最常用的。Java 中可以使用 java.util.UUID 类来生成 UUID。</li><li>基于 Snowflake 算法：Snowflake 是 Twitter 开发的一种分布式 ID 生成算法，它可以在分布式系统中生成唯一的、有序的、趋势递增的 ID。Snowflake 算法的核心思想是将一个 64 位的 ID 分成多个部分，其中包括时间戳、数据中心 ID、机器 ID、自增序列等。Java 中可以使用 snowflake-java 库来实现 Snowflake 算法。</li><li>基于数据库自增主键：使用数据库自增主键作为 ID，可以保证在数据库中唯一。不过需要注意的是，使用数据库自增主键可能会对数据库性能造成影响，因为每次插入数据都需要向数据库请求一个新的 ID。</li></ol><h2 id="5-Redis-和-mysql-数据一致性"><a href="#5-Redis-和-mysql-数据一致性" class="headerlink" title="5.Redis 和 mysql 数据一致性"></a>5.Redis 和 mysql 数据一致性</h2><p>redis-数据一致性</p><p><a href="https://bigducksoup.github.io/2023/06/13/redis-cache-coherence/">https://bigducksoup.github.io/2023/06/13/redis-cache-coherence/</a></p><h2 id="6-怎么解决缓存穿透、缓存击穿、缓存雪崩"><a href="#6-怎么解决缓存穿透、缓存击穿、缓存雪崩" class="headerlink" title="6.怎么解决缓存穿透、缓存击穿、缓存雪崩"></a>6.怎么解决缓存穿透、缓存击穿、缓存雪崩</h2><p>redis高可用之缓存穿透</p><p><a href="https://bigducksoup.github.io/2023/05/30/redis-cache-penetration/">https://bigducksoup.github.io/2023/05/30/redis-cache-penetration/</a></p><p>redis高可用之缓存击穿</p><p><a href="https://bigducksoup.github.io/2023/06/08/redis-cache-breakdown/">https://bigducksoup.github.io/2023/06/08/redis-cache-breakdown/</a></p><p>redis高可用之缓存雪崩</p><p><a href="https://bigducksoup.github.io/2023/06/09/redis-cache-avalanche/">https://bigducksoup.github.io/2023/06/09/redis-cache-avalanche/</a></p><h2 id="7-消息推送怎么实现的"><a href="#7-消息推送怎么实现的" class="headerlink" title="7.消息推送怎么实现的"></a>7.消息推送怎么实现的</h2><p>使用websocket</p><h2 id="8-分库分表"><a href="#8-分库分表" class="headerlink" title="8.分库分表"></a>8.分库分表</h2><h4 id="垂直分库"><a href="#垂直分库" class="headerlink" title="垂直分库"></a>垂直分库</h4><p>将原来一个单数据库的压力分担到不同的数据库，可以很好应对高并发场景。数据库垂直拆分后的架构如下：</p><p><img src="/../img/Interview-Exp-2023-06-29/vertical-db-split.png" alt="vertical-db-split"></p><h4 id="垂直分表"><a href="#垂直分表" class="headerlink" title="垂直分表"></a>垂直分表</h4><p>如果一个单表包含了几十列甚至上百列，管理起来很混乱，每次都<code>select *</code>的话，还占用IO资源。这时候，我们可以将一些<strong>不常用的、数据较大或者长度较长的列</strong>拆分到另外一张表。</p><p>比如一张用户表，它包含<code>user_id、user_name、mobile_no、age、email、nickname、address、user_desc</code>，如果<code>email、address、user_desc</code>等字段不常用，我们可以把它拆分到另外一张表，命名为用户详细信息表。这就是垂直分表</p><p><img src="/../img/Interview-Exp-2023-06-29/vertical-table-split.png" alt="vertical-table-split"></p><h4 id="水平分库"><a href="#水平分库" class="headerlink" title="水平分库"></a><strong>水平分库</strong></h4><p>水平分库是指，将表的数据量切分到不同的数据库服务器上，每个服务器具有相同的库和表，只是表中的数据集合不一样。它可以有效的缓解单机单库的性能瓶颈和压力。</p><p>用户库的水平拆分架构如下：</p><p><img src="/../img/Interview-Exp-2023-06-29/horizontal-db-split.png" alt="horizontal-db-split"></p><h4 id="水平分表"><a href="#水平分表" class="headerlink" title="水平分表"></a><strong>水平分表</strong></h4><p>如果一个表的数据量太大，可以按照某种规则（如<code>hash取模、range</code>），把数据切分到多张表去。</p><p>一张订单表，按<code>时间range</code>拆分如下：</p><p><img src="/../img/Interview-Exp-2023-06-29/horizontal-table-split.png" alt="horizontal-table-split"></p><h4 id="水平分库分表策略"><a href="#水平分库分表策略" class="headerlink" title="水平分库分表策略"></a>水平分库分表策略</h4><p>分库分表策略一般有几种，使用与不同的场景：</p><ul><li>range范围</li><li>hash取模</li><li>range+hash取模混合</li></ul><h5 id="range范围"><a href="#range范围" class="headerlink" title="range范围"></a><strong>range范围</strong></h5><p>range，即范围策略划分表。比如我们可以将表的主键，按照从<code>0~1000万</code>的划分为一个表，<code>1000~2000万</code>划分到另外一个表。如下图：</p><p><img src="/../img/Interview-Exp-2023-06-29/range.jpg" alt="range"></p><p>当然，有时候我们也可以按时间范围来划分，如不同年月的订单放到不同的表，它也是一种range的划分策略。</p><p><strong>这种方案的优点：</strong></p><ul><li>这种方案有利于扩容，不需要数据迁移。假设数据量增加到5千万，我们只需要水平增加一张表就好啦，之前<code>0~4000万</code>的数据，不需要迁移。</li></ul><p><strong>缺点：</strong></p><ul><li>这种方案会有热点问题，因为订单id是一直在增大的，也就是说最近一段时间都是汇聚在一张表里面的。比如最近一个月的订单都在<code>1000万~2000</code>万之间，平时用户一般都查最近一个月的订单比较多，请求都打到<code>order_1</code>表啦，这就导致表的<strong>数据热点</strong>问题。</li></ul><h5 id="hash取模"><a href="#hash取模" class="headerlink" title="hash取模"></a><strong>hash取模</strong></h5><p>hash取模策略：指定的路由key（一般是user_id、订单id作为key）对分表总数进行取模，把数据分散到各个表中。</p><p>比如原始订单表信息，我们把它分成4张分表：</p><p><img src="/../img/Interview-Exp-2023-06-29/hash.jpg" alt="hash"></p><ul><li>比如id&#x3D;1，对4取模，就会得到1，就把它放到第1张表，即<code>t_order_0</code>;</li><li>id&#x3D;3，对4取模，就会得到3，就把它放到第3张表，即<code>t_order_2</code>;</li></ul><p><strong>这种方案的优点：</strong></p><ul><li>hash取模的方式，不会存在明显的热点问题。</li></ul><p><strong>缺点：</strong></p><ul><li>如果一开始按照hash取模分成4个表了，未来某个时候，表数据量又到瓶颈了，需要扩容，这就比较棘手了。比如你从4张表，又扩容成<code>8</code>张表，那之前<code>id=5</code>的数据是在（<code>5%4=1</code>，即第一张表），现在应该放到（<code>5%8=5</code>，即第<code>5</code>张表），也就是说<strong>历史数据要做迁移了</strong>。</li></ul><h5 id="range-hash取模混合"><a href="#range-hash取模混合" class="headerlink" title="range+hash取模混合"></a>range+hash取模混合</h5><p>既然range存在热点数据问题，hash取模扩容迁移数据比较困难，我们可以综合两种方案一起嘛，取之之长，弃之之短。</p><p>比较简单的做法就是，在拆分库的时候，我们可以先用<strong>range范围</strong>方案，比如订单id在04000万的区间，划分为订单库1，id在4000万8000万的数据，划分到订单库2,将来要扩容时，id在8000万~1.2亿的数据，划分到订单库3。然后订单库内，再用<strong>hash取模</strong>的策略，把不同订单划分到不同的表。</p><p><img src="/../img/Interview-Exp-2023-06-29/hash-range.jpg" alt="hash-range"></p><h4 id="QA"><a href="#QA" class="headerlink" title="QA"></a>QA</h4><ul><li>事务问题</li></ul><p>分库分表后，假设两个表在不同的数据库，那么本地事务已经无效啦，需要使用分布式事务了。</p><ul><li>跨库关联</li></ul><p>跨节点Join的问题：解决这一问题可以分两次查询实现</p><ul><li>排序问题</li></ul><p>跨节点的count,order by,group by以及聚合函数等问题：可以分别在各个节点上得到结果后在应用程序端进行合并。</p><ul><li><p>分页问题</p></li><li><p>方案1：在个节点查到对应结果后，在代码端汇聚再分页。</p></li><li><p>方案2：把分页交给前端，前端传来pageSize和pageNo，在各个数据库节点都执行分页，然后汇聚总数量前端。这样缺点就是会造成空查，如果分页需要排序，也不好搞。</p></li><li><p>分布式ID</p></li></ul><p>据库被切分后，不能再依赖数据库自身的主键生成机制啦，最简单可以考虑UUID，或者使用雪花算法生成分布式ID。</p><h4 id="目前流行的分库分表中间件"><a href="#目前流行的分库分表中间件" class="headerlink" title="目前流行的分库分表中间件"></a><strong>目前流行的分库分表中间件</strong></h4><ul><li>cobar</li><li>Mycat</li><li>Sharding-JDBC</li><li>Atlas</li><li>TDDL（淘宝）</li><li>vitess</li></ul><h2 id="9-transactional原理"><a href="#9-transactional原理" class="headerlink" title="9.@transactional原理"></a>9.@transactional原理</h2><p>@Transactional的原理如下：</p><ol><li>@Transactional注解会被 Spring AOP 拦截器拦截，并在方法执行前后开启和提交事务。</li><li>Spring AOP 使用动态代理技术生成一个代理对象，该代理对象包装了被 <code>@Transactional</code> 注解修饰的目标对象。</li><li>当调用代理对象的方法时，Spring AOP 会在方法执行前先判断当前线程是否已经存在一个事务。如果存在，则使用该事务；如果不存在，则创建一个新事务。</li><li>当方法执行完成后，Spring AOP 会根据方法执行结果决定是提交事务还是回滚事务。如果方法执行过程中抛出了异常，则回滚事务；否则，提交事务。</li><li>在事务管理过程中，Spring 会使用事务管理器（如 DataSourceTransactionManager）来管理事务。当事务提交或回滚时，事务管理器会负责将事务的状态改变，并将事务提交或回滚到底层数据库中去。</li></ol><h2 id="10-联合索引-where-a-x3D-xxx-and-b-gt-xxx-and-c-x3D-xxx-能用索引吗"><a href="#10-联合索引-where-a-x3D-xxx-and-b-gt-xxx-and-c-x3D-xxx-能用索引吗" class="headerlink" title="10.联合索引 where a &#x3D; xxx and b &gt; xxx and c &#x3D; xxx 能用索引吗"></a>10.联合索引 where a &#x3D; xxx and b &gt; xxx and c &#x3D; xxx 能用索引吗</h2><p>联合索引的最左匹配原则，在遇到范围查询（如 &gt;、&lt;）的时候，就会停止匹配，也就是范围查询的字段可以用到联合索引，但是在范围查询字段后面的字段无法用到联合索引。但是，对于 &gt;&#x3D;、&lt;&#x3D;、BETWEEN、like 前缀匹配这四种范围查询，并不会停止匹配。</p><h2 id="11-为什么遇到范围查询就会停止查询，你知道原理吗"><a href="#11-为什么遇到范围查询就会停止查询，你知道原理吗" class="headerlink" title="11.为什么遇到范围查询就会停止查询，你知道原理吗"></a>11.为什么遇到范围查询就会停止查询，你知道原理吗</h2><p>因为<strong>前一个条件</strong>相同的情况下 <strong>当前条件</strong>才会是<strong>有序的</strong>。<br>当<strong>前一个条件</strong>不同 那么无法保证<strong>当前条件</strong>为有序的 所以索引失效</p><p><a href="https://blog.csdn.net/weixin_52534279/article/details/119308663">https://blog.csdn.net/weixin_52534279/article/details/119308663</a></p><h2 id="12-从输入URL-到页面展示的过程"><a href="#12-从输入URL-到页面展示的过程" class="headerlink" title="12.从输入URL 到页面展示的过程"></a>12.从输入URL 到页面展示的过程</h2><p>小林coding有讲到</p><p><a href="https://xiaolincoding.com/network/1_base/what_happen_url.html">https://xiaolincoding.com/network/1_base/what_happen_url.html</a></p><h2 id="13-简述-HTTPS-的加密与认证过程"><a href="#13-简述-HTTPS-的加密与认证过程" class="headerlink" title="13.简述 HTTPS 的加密与认证过程"></a>13.简述 HTTPS 的加密与认证过程</h2><p><a href="https://xiaolincoding.com/network/2_http/http_interview.html#http-%E4%B8%8E-https">https://xiaolincoding.com/network/2_http/http_interview.html#http-%E4%B8%8E-https</a></p><ul><li><strong>混合加密</strong>的方式实现信息的<strong>机密性</strong>，解决了窃听的风险。</li><li><strong>摘要算法</strong>的方式来实现<strong>完整性</strong>，它能够为数据生成独一无二的「指纹」，指纹用于校验数据的完整性，解决了篡改的风险。</li><li>将服务器公钥放入到<strong>数字证书</strong>中，解决了冒充的风险。</li></ul><h2 id="14-SSL-运行在那一层"><a href="#14-SSL-运行在那一层" class="headerlink" title="14.SSL 运行在那一层"></a>14.SSL 运行在那一层</h2><p>在弄清SSL协议在网络协议的哪一层之前，我们先要知道SSL协议是有记录协议和握手协议之分：</p><p><strong>（1）记录协议。</strong>它建立在可靠的传输协议（如TCP）之上，为高层协议提供数据封装、压缩、加密等基本功能的支持。</p><p><strong>（2）握手协议。</strong>它建立在SSL记录协议之上，用于在实际的数据传输开始前，通讯双方进行身份认证、协商加密算法、交换加密密钥等。</p><p>实际上SSL协议是位于应用层和传输层之间，可以为任何基于TCP等可靠连接的应用层协议提供安全性保证，为数据通讯提供安全支持。</p><h2 id="15-启动一个程序是进程还是线程"><a href="#15-启动一个程序是进程还是线程" class="headerlink" title="15.启动一个程序是进程还是线程"></a>15.启动一个程序是进程还是线程</h2><p>启动一个程序会创建一个进程，而不是线程。进程是操作系统分配资源的基本单位，包括代码、数据和系统资源等，每个进程都有独立的地址空间和系统资源，可以并发地执行多个任务。</p><h2 id="16-进程是怎么调度的"><a href="#16-进程是怎么调度的" class="headerlink" title="16.进程是怎么调度的"></a>16.进程是怎么调度的</h2><p>发生进程切换时，本质是CPU资源占用者间的切换。此时需要保存当前进程在PCB中的执行上下文(CPU状态)，然后恢复下一个进程的执行上下文。</p><p>处理机调度涉及两个方面，一是选择进程：从就绪队列中挑选下一个占用CPU运行的进程。二是选择CPU资源：从多个可用CPU中挑选就绪进程可使用的CPU资源。</p><p>调度策略是指确定如何从就绪队列中选择下一个执行进程，可以理解为调度算法。评价算法的基准有以下几个：</p><ol><li>CPU使用率：CPU处于忙状态的时间百分比</li><li>吞吐量：单位时间内完成的进程数量</li><li>周转时间：进程从初始化到结束(包括等待)的总时间</li><li>就绪等待时间：进程在就绪队列中的总时间</li><li>响应时间：从提交请求到产生响应所花费的总时间</li></ol><p>另外，处理机调度需要保证公平：</p><ol><li>保证每个进程占用相同的CPU时间</li><li>保证每个进程的等待时间相同</li></ol><h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><h4 id="先来先服务算法-FCFS-First-Come-First-Served"><a href="#先来先服务算法-FCFS-First-Come-First-Served" class="headerlink" title="先来先服务算法(FCFS: First Come, First Served)"></a>先来先服务算法(FCFS: First Come, First Served)</h4><p>FCFS依据进程进入就绪状态的先后顺序排列，它简单、易于实现。</p><h4 id="短进程优先算法-SPN"><a href="#短进程优先算法-SPN" class="headerlink" title="短进程优先算法(SPN)"></a>短进程优先算法(SPN)</h4><p>SPN是FCFS算法的改进，它选择预期执行时间最短进程占用CPU进入运行状态。SPN算法的优点是具有最优平均周转时间。</p><h4 id="最高响应比优先算法-HRRN-Highest-Response-Ratio-Next"><a href="#最高响应比优先算法-HRRN-Highest-Response-Ratio-Next" class="headerlink" title="最高响应比优先算法(HRRN: Highest Response Ratio Next)"></a>最高响应比优先算法(HRRN: Highest Response Ratio Next)</h4><p>选择就绪队列中响应比R值最高的进程，R计算方法如下：<br> Ｒ＝（ｗ+s)&#x2F;s<br> w: 等待时间(waiting time)<br> s: 执行时间(service time)</p><h4 id="时间片轮转算法-RR-Round-Robin"><a href="#时间片轮转算法-RR-Round-Robin" class="headerlink" title="时间片轮转算法(RR: Round Robin)"></a>时间片轮转算法(RR: Round Robin)</h4><p>RR算法是对FCFS的改进，在FCFS的基础上加入对进程执行时间(CPU时间片)的限制。当进程的时间片用完后，按照FCFS的规则选择下一个进程。</p><h2 id="17-java中-sleep-和-wait-的区别"><a href="#17-java中-sleep-和-wait-的区别" class="headerlink" title="17.java中 sleep() 和 wait() 的区别"></a>17.java中 sleep() 和 wait() 的区别</h2><p>在 Java 中，sleep() 和 wait() 都可以用来控制线程的执行。它们的主要区别如下：</p><ol><li>sleep() 属于 Thread 类中的静态方法，它可以让当前线程暂停执行一段时间，但不会释放锁。wait() 则是 Object 类中的实例方法，它可以让当前线程暂停执行，并释放锁，等待被唤醒。</li><li>sleep() 方法的参数是一个时间段，单位是毫秒，表示当前线程暂停执行的时间长度。wait() 方法则没有参数，它一直等待直到被其他线程调用 notify() 或 notifyAll() 方法唤醒。</li><li>sleep() 方法可以在任何地方调用，而 wait() 方法只能在同步块或同步方法中调用。</li><li>sleep() 方法不依赖于锁，因此可以在没有同步块的情况下使用。wait() 方法需要在同步块或同步方法中使用，并且会释放锁，以便其他线程可以访问共享资源。</li></ol><p>综上所述，sleep() 和 wait() 的主要区别在于它们的用途和使用方式不同。sleep() 用于暂停当前线程，wait() 用于等待其他线程的唤醒。sleep() 不释放锁，wait() 释放锁。因此，在使用时需要根据实际情况进行选择。</p><h2 id="18-线程池构造函数参数有哪些，详细解释下"><a href="#18-线程池构造函数参数有哪些，详细解释下" class="headerlink" title="18.线程池构造函数参数有哪些，详细解释下"></a>18.线程池构造函数参数有哪些，详细解释下</h2><p>在 Java 中，线程池是一种常见的多线程编程方式，可以有效地管理和复用线程，提高程序的性能和响应性。Java 中的线程池是通过 ThreadPoolExecutor 类来实现的，该类的构造函数参数包括以下几个：</p><ol><li>corePoolSize：线程池的核心线程数，即线程池中保留的最小线程数。当提交的任务数超过核心线程数时，线程池会自动创建新的线程来处理任务。</li><li>maximumPoolSize：线程池的最大线程数，即线程池中允许的最大线程数。当提交的任务数超过最大线程数时，线程池会根据拒绝策略来处理任务。</li><li>keepAliveTime：线程空闲的存活时间，即当线程池中的线程数大于核心线程数时，多余的空闲线程在等待新任务到来的过程中，能够保持存活的时间。单位为时间单位。</li><li>unit：keepAliveTime 的时间单位，可以是 TimeUnit 中的常量，例如 TimeUnit.SECONDS。</li><li>workQueue：用于存放等待执行的任务的阻塞队列，可以选择不同的队列实现，例如 ArrayBlockingQueue、LinkedBlockingQueue、SynchronousQueue、PriorityBlockingQueue 等。</li><li>threadFactory：用于创建新线程的工厂类，可以自定义线程的名称、优先级、是否为守护线程等属性。</li><li>handler：用于处理任务拒绝策略的处理器，可以选择不同的拒绝策略，例如 AbortPolicy、CallerRunsPolicy、DiscardOldestPolicy、DiscardPolicy 等。</li></ol><p>总之，线程池构造函数参数包括核心线程数、最大线程数、线程空闲存活时间、等待执行的任务队列、新线程的创建工厂、任务拒绝策略处理器等。根据不同的需求和条件，可以选择不同的参数来创建合适的线程池。</p>]]></content>
    
    
    <categories>
      
      <category>每日面经</category>
      
    </categories>
    
    
    <tags>
      
      <tag>每日面经</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>redis-数据一致性</title>
    <link href="/2023/06/13/redis-cache-coherence/"/>
    <url>/2023/06/13/redis-cache-coherence/</url>
    
    <content type="html"><![CDATA[<h1 id="redis与数据库的数据一致性解决方案"><a href="#redis与数据库的数据一致性解决方案" class="headerlink" title="redis与数据库的数据一致性解决方案"></a>redis与数据库的数据一致性解决方案</h1><h2 id="1-一致性"><a href="#1-一致性" class="headerlink" title="1.一致性"></a>1.一致性</h2><p>一致性是指系统中各节点数据保持一致。分布式系统中，可以理解为多个节点中的数据是一致的。</p><p>一致性根据严苛程度分类：</p><p>强一致性：写进去的数据是什么，读出来的数据就是什么，对性能影响最大；</p><p>弱一致性：数据写入成功后，系统不保证能立刻读出最新的数据，也不承诺多久之后数据可以达到一致，但保证到某个时间级别后，数据能达到一致；</p><p>最终一致性：最终一致性是弱一致性的一个特例，最终一致性同样只保证数据写入成功后，在某个时间点后数据会达到一致。这个系统无法保证强一致性的时间片段被称为不一致窗口。不一致时间窗口的时间长短取决于很多因素，比如副本个数、网络延迟、系统负载等。</p><p>最终一致性是弱一致性中非常受大众推崇的一种一致性模型，也是目前业界在大型分布式系统的数据一致性上比较推崇的模型。</p><h2 id="2-数据同步策略"><a href="#2-数据同步策略" class="headerlink" title="2.数据同步策略"></a>2.数据同步策略</h2><p>为保证缓存数据与数据库数据一致，主要考虑如下两种策略实现：</p><p>1.先删除缓存，再更新数据库；</p><p>2.先更新数据库，再删除缓存；</p><p>3.延时双删</p><p>4.使用消息队列</p><p>5.使用canal</p><h3 id="1-先删除缓存，再更新数据库"><a href="#1-先删除缓存，再更新数据库" class="headerlink" title="1.先删除缓存，再更新数据库"></a>1.先删除缓存，再更新数据库</h3><p><img src="/../img/redis-cache-coherence/rm-cache-first-success.png" alt="先删除缓存"></p><p>但是实际的环境中无法严格确定线程的执行情况，可能会遇到如下情况导致缓存更新脏数据</p><p><img src="/../img/redis-cache-coherence/rm-cache-first-fail.png" alt="更新脏数据"></p><h3 id="2-先更新数据库，再删除缓存"><a href="#2-先更新数据库，再删除缓存" class="headerlink" title="2.先更新数据库，再删除缓存"></a>2.先更新数据库，再删除缓存</h3><p><img src="/../img/redis-cache-coherence/update-db-first-success.png" alt="先更新数据库"></p><p>但是这种方法也会出现问题</p><p><img src="/../img/redis-cache-coherence/update-db-first-fail.png" alt="先更新数据库-失败"></p><h3 id="3-延时双删"><a href="#3-延时双删" class="headerlink" title="3.延时双删"></a>3.延时双删</h3><p><img src="/../img/redis-cache-coherence/delay-delete.png" alt="延时双删"></p><p>延时双删可以解决以上两种同步策略更新脏数据的问题</p><h3 id="4-使用消息队列"><a href="#4-使用消息队列" class="headerlink" title="4.使用消息队列"></a>4.使用消息队列</h3><p><img src="/../img/redis-cache-coherence/MQ.png" alt="MQ"></p><h3 id="5-canal"><a href="#5-canal" class="headerlink" title="5.canal"></a>5.canal</h3><p><img src="/../img/redis-cache-coherence/canal.png" alt="canal"></p><h3 id="6-分布式锁"><a href="#6-分布式锁" class="headerlink" title="6.分布式锁"></a>6.分布式锁</h3><p>加锁可以保证强一致性，但是效率较低</p><p><img src="/../img/redis-cache-coherence/lock.png" alt="lock"></p>]]></content>
    
    
    <categories>
      
      <category>redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>redis高可用之缓存雪崩</title>
    <link href="/2023/06/09/redis-cache-avalanche/"/>
    <url>/2023/06/09/redis-cache-avalanche/</url>
    
    <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>大量缓存数据在同一时间过期（失效）时，如果此时有大量的用户请求，都无法在 Redis 中处理，于是全部请求都直接访问数据库，从而导致数据库的压力骤增，严重的会造成数据库宕机，从而形成一系列连锁反应，造成整个系统崩溃，这就是<strong>缓存雪崩</strong></p><p><img src="/../img/redis-cache-avalanche/redis-cache-avalanche.png" alt="缓存雪崩"></p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p> 1.给不同的Key的TTL添加随机值</p><p> 2.利用Redis集群提高服务的可用性</p><p> 3.给缓存业务添加降级限流策略</p><p> 4.给业务添加多级缓存</p><p>5.设置缓存不过期</p>]]></content>
    
    
    <categories>
      
      <category>redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>redis高可用之缓存击穿</title>
    <link href="/2023/06/08/redis-cache-breakdown/"/>
    <url>/2023/06/08/redis-cache-breakdown/</url>
    
    <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>缓存雪崩是指只大量热点key同时失效的情况，如果是单个热点key，在不停的扛着大并发，在这个key失效的瞬间，持续的大并发请求就会击破缓存，直接请求到数据库，好像蛮力击穿一样。这种情况就是<strong>缓存击穿</strong>（Cache Breakdown）。</p><p><img src="/../img/redis-cache-breakdown/redis-cache-breakdown.png" alt="缓存击穿"></p><p>从定义上可以看出，缓存击穿和缓存雪崩很类似，只不过是缓存击穿是一个热点key失效，而缓存雪崩是大量热点key失效。因此，可以将缓存击穿看作是缓存雪崩的一个子集。</p><h1 id="发生原因"><a href="#发生原因" class="headerlink" title="发生原因"></a>发生原因</h1><p>缓存中不存在所需的热点数据：当系统中某个热点数据需要被频繁访问时，如果这个热点数据最开始没有被缓存，那么就会导致系统每次请求都需要直接查询数据库，造成数据库负担。</p><p>缓存的热点数据过期：当一个热点数据过期并需要重新缓存时，如果此时有大量请求，那么就会导致所有请求都要直接查询数据库。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><ol><li>使用互斥锁（Mutex Key），只让一个线程构建缓存，其他线程等待构建缓存执行完毕，重新从缓存中获取数据。单机通过synchronized或lock来处理，分布式环境采用分布式锁。</li></ol><p><img src="/../img/redis-cache-breakdown/lock.png" alt="互斥锁解决缓存击穿"></p><ol start="2"><li>逻辑过期</li></ol><p><img src="/../img/redis-cache-breakdown/logicExpire.png" alt="逻辑过期"></p><ol start="3"><li><p>给hot key设置合适的过期时间</p><p>在对缓存一致性要求不高时，不给热点key设置过期时间，或设置合适的过期时间，同时启动一个定时任务去更新此key。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>redis高可用之缓存穿透</title>
    <link href="/2023/05/30/redis-cache-penetration/"/>
    <url>/2023/05/30/redis-cache-penetration/</url>
    
    <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>缓存穿透（cache penetration）是用户访问的数据既不在缓存当中，也不在数据库中。出于容错的考虑，如果从底层数据库查询不到数据，则不写入缓存。这就导致每次请求都会到底层数据库进行查询，缓存也失去了意义。当高并发或有人利用不存在的Key频繁攻击时，数据库的压力骤增，甚至崩溃，这就是缓存穿透问题。</p><p><img src="/../img/redis-cache-penetration/redis-cache-penetration.png" alt="redis-cache-penetration"></p><h1 id="发生场景"><a href="#发生场景" class="headerlink" title="发生场景"></a>发生场景</h1><p><strong>缓存穿透</strong>发生的场景一般有两类：</p><ul><li>原来数据是存在的，但由于某些原因（误删除、主动清理等）在缓存和数据库层面被删除了，但前端或前置的应用程序依旧保有这些数据；</li><li>恶意攻击行为，利用不存在的Key或者恶意尝试导致产生大量不存在的业务数据请求。</li></ul><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h3 id="方案一：缓存空值（null）或默认值"><a href="#方案一：缓存空值（null）或默认值" class="headerlink" title="方案一：缓存空值（null）或默认值"></a><strong>方案一：缓存空值（null）或默认值</strong></h3><p>分析业务请求，如果是正常业务请求时发生缓存穿透现象，可针对相应的业务数据，在数据库查询不存在时，将其缓存为空值（null）或默认值。需要注意的是，针对空值的缓存失效时间不宜过长，一般设置为5分钟之内。当数据库被写入或更新该key的新数据时，缓存必须同时被刷新，避免数据不一致。</p><h3 id="方案二：业务逻辑前置校验"><a href="#方案二：业务逻辑前置校验" class="headerlink" title="方案二：业务逻辑前置校验"></a><strong>方案二：业务逻辑前置校验</strong></h3><p>在业务请求的入口处进行数据合法性校验，检查请求参数是否合理、是否包含非法值、是否恶意请求等，提前有效阻断非法请求。比如，根据年龄查询时，请求的年龄为-10岁，这显然是不合法的请求参数，直接在参数校验时进行判断返回。</p><h3 id="方案三：使用布隆过滤器请求白名单"><a href="#方案三：使用布隆过滤器请求白名单" class="headerlink" title="方案三：使用布隆过滤器请求白名单"></a><strong>方案三：使用布隆过滤器请求白名单</strong></h3><p>在写入数据时，使用布隆过滤器进行标记（相当于设置白名单），业务请求发现缓存中无对应数据时，可先通过查询布隆过滤器判断数据是否在白名单内，如果不在白名单内，则直接返回空或失败。</p><h4 id="布隆过滤器（BloomFilter）"><a href="#布隆过滤器（BloomFilter）" class="headerlink" title="布隆过滤器（BloomFilter）"></a>布隆过滤器（BloomFilter）</h4><h5 id="定义："><a href="#定义：" class="headerlink" title="定义："></a>定义：</h5><p>布隆过滤器是一种概率型数据结构，它的特点是高效的插入和查询，能确定某个字符串一定存在或者可能存在。</p><p><strong>布隆过滤器不存储具体数据，所以占用空间小，查询结果存在误差，但误差可控，同时不支持删除操作。</strong></p><h5 id="构成："><a href="#构成：" class="headerlink" title="构成："></a>构成：</h5><p>布隆过滤器的原理本质上和散列表是一样的。但布隆过滤器为了节约内存，不是使用的数组，而是使用的位图。</p><p>它包括<strong>一个位图</strong> 和 <strong>n个hash函数</strong></p><h5 id="原理："><a href="#原理：" class="headerlink" title="原理："></a>原理：</h5><p>当一个元素加入位图时，通过k个hash函数将元素映射到位图的k个点，并把它们置1；当检索时，再通过k个hash函数运算检查位图的k个点是否都为1；如果有不为1的点，那么认为该key不存在；如果全部为1，则可能存在。</p><p>布隆过滤器是不支持删除操作的，原因在于：在位图中每个槽位只有两种状态（0或者1），一个槽位被置为1，但不确定它被设置了多少次；也不知道被多少个key hash映射而来；以及具体被哪个hash函数映射而来。</p><p>值得注意的是，只要有一个槽位为0，则key一定不存在；如果key映射的所有槽位都为1，不能说明一定存在，只能说明可能存在（假阳率）。</p><p><img src="/../img/redis-cache-penetration/bloomfilter.png" alt="bloomfilter"></p><h3 id="方案四：用户黑名单限制"><a href="#方案四：用户黑名单限制" class="headerlink" title="方案四：用户黑名单限制"></a><strong>方案四：用户黑名单限制</strong></h3><p>当发生异常情况时，实时监控访问的对象和数据，分析用户行为，针对故意请求、爬虫或攻击者，进行特定用户的限制；</p><p>当然，可能针对缓存穿透的情况，也有可能是其他的原因引起，可以针对具体情况，采用对应的措施。</p>]]></content>
    
    
    <categories>
      
      <category>redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>redis持久化之AOF</title>
    <link href="/2023/05/13/redis-aof/"/>
    <url>/2023/05/13/redis-aof/</url>
    
    <content type="html"><![CDATA[<h1 id="redis持久化AOF"><a href="#redis持久化AOF" class="headerlink" title="redis持久化AOF"></a>redis持久化AOF</h1><p> AOF (Append Only File)  持久化默认是关闭的，通过将 redis.conf 中将 appendonly no，修改为 appendonly yes 来开启AOF 持久化功能，如果服务器开始了 AOF 持久化功能，服务器会优先使用 AOF 文件来还原数据库状态。只有在 AOF 持久化功能处于关闭状态时，服务器才会使用 RDB 文件来还原数据库状态。</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>每当 Redis 接受到会修改数据集的命令时，就会把<strong>命令</strong>追加到 AOF 文件里，当你重启 Redis 时，AOF 文件里的命令会被重新执行一次，重建数据。</p><p>被写入 AOF 文件中的所有命令都是以 Redis 的命令请求协议格式保存的，因为 Redis 的命令请求协议是纯文本格式，所以我们可以直接打开一个 AOF 文件，观察里面的内容。</p><p>因为AOF文件里面包含了重建数据库状态所需的所有写命令，所以 服务器只要读入并重新执行一遍AOF文件里面保存的写命令，就可以还 原服务器关闭之前的数据库状态。</p><p><strong>步骤如下：</strong></p><ol><li><p>创建一个不带网络连接的伪客户端（fake client）：因为Redis的 命令只能在客户端上下文中执行，而载入AOF文件时所使用的命令直接 来源于AOF文件而不是网络连接，所以服务器使用了一个没有网络连接 的伪客户端来执行AOF文件保存的写命令，伪客户端执行命令的效果和 带网络连接的客户端执行命令的效果完全一样。</p></li><li><p>从AOF文件中分析并读取出一条写命令。</p></li><li><p>使用伪客户端执行被读出的写命令。</p></li><li><p>一直执行步骤2和步骤3，直到AOF文件中的所有写命令都被处 理完毕为止。</p></li></ol><p>执行完成后，数据库的状态就会被还原。</p><h2 id="AOF持久化的实现"><a href="#AOF持久化的实现" class="headerlink" title="AOF持久化的实现"></a>AOF持久化的实现</h2><p>AOF 持久化功能的实现可以分为<strong>命令追加（append）、文件写入、文件同步（sync）</strong>三个步骤。</p><h3 id="1-命令追加"><a href="#1-命令追加" class="headerlink" title="1.命令追加"></a>1.命令追加</h3><p>当 AOF 持久化功能处于打开状态时，服务器在执行完一个写命令之后，会以协议格式将被执行的写命令追加到服务器状态的 aof_buf 缓冲区的末尾。</p><p>举例：如果客户端向服务器发送以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">redis&gt; SET KEY VALUE<br>OK<br></code></pre></td></tr></table></figure><p>那么服务器在执行这个命令之后，会将以下协议内容追加到 aof_buf 缓冲区的末尾：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">redis&gt; SET KEY VALUE<br></code></pre></td></tr></table></figure><p>又例如，如果客户端向服务器发送以下命令：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">redis&gt; RPUSH NUMBERS ONE TWO THREE<br>(<span class="hljs-built_in">integer</span>) 3<br></code></pre></td></tr></table></figure><p>那么服务器在执行这个RPUSH命令之后，会将以下协议内容追加到aof_buf缓冲区的末尾：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">redis&gt; RPUSH NUMBERS ONE TWO THREE<br></code></pre></td></tr></table></figure><h3 id="2-AOF-文件的写入与同步"><a href="#2-AOF-文件的写入与同步" class="headerlink" title="2.AOF 文件的写入与同步"></a>2.AOF 文件的写入与同步</h3><p>Redis 的服务器进程就是一个事件循环（loop），这个循环中的文件事件负责接受客户端的命令请求，以及向客户端发送命令回复，而时间事件则负责执行像 serverCron 函数这样需要定时运行的函数。</p><p>因为服务器在处理文件事件时可能会执行写命令，使得一些内容被追加到 aof_buf 缓冲区里面，所以在服务器每次结束一个事件循环之前，它都会调用 flushAppendOnlyFile 函数，考虑是否需要将 aof_buf 缓冲区的内容写入和同步到 AOF 文件里，这个过程可以用伪代码表示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">evenLoop</span> () :<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span> :<br>        <span class="hljs-comment"># 处理文件事件，接受命令请求以及发送命令回复</span><br>        <span class="hljs-comment"># 处理请求时可能会有新内容被追加到 aof_buf 缓冲区</span><br>        processFileEvents ()<br>        <span class="hljs-comment"># 处理时间事件</span><br>        processTimeEvents ()<br>        <span class="hljs-comment"># 考虑是否要将 aof_buf 中的内容写入和保存到 AOF 文件里</span><br>        flushAppendOnlyFile ()<br></code></pre></td></tr></table></figure><p><strong>flushAppendOnlyFile 函数的行为由服务器配置的 appendfsync 选项的值来决定</strong>，各个不同值产生的行为如下表：</p><table><thead><tr><th><strong>appendfsync 选项值</strong></th><th><strong>flushAppendOnlyFile 函数行为</strong></th></tr></thead><tbody><tr><td>always</td><td>将 aof_buf 缓冲区中的所有内容写入并同步到 AOF 文件</td></tr><tr><td>everysec(默认)</td><td>将 aof_buf 缓冲区中的所有内容写入到 AOF 文件，如果上次同步 AOF 文件的时间距离现在超过一秒钟，那么再次对 AOF 文件进行同步，并且这个操作是由一个线程专门负责执行的</td></tr><tr><td>no</td><td>将 aof_buf 缓冲区中的所有内容写入到 AOF 文件，但并不对 AOF 文件进行同步，何时同步由操作系统来决定</td></tr></tbody></table><p><strong>服务器配置 appendfsync 选项的值直接决定 AOF 持久化功能的效率和安全性。</strong></p><p>当 appendfsync 的值为 always 时，服务器在每个事件循环都要将 aof_buf 缓冲区中的所有内容写入到 AOF 文件，并且同步 AOF 文件，所以 always 的效率是 appendfsync 选项三个值当中最慢的一个，但从安全性来说，always 也是最安全的，因为即使出现故障停机，AOF 持久化也只会丢失一个事件循环中所产生的命令数据。</p><p>当 appendfsync 的值为 everysec 时，服务器在每个事件循环都要将 aof_buf 缓冲区中的所有内容写入到 AOF 文件，并且每隔一秒就要在子线程中对 AOF 文件进行一次同步。从效率上来讲，everysec 模式足够快，并且就算出现故障停机，数据库也只丢失一秒钟的命令数据。</p><p>当 appendfsync 的值为 no 时，服务器在每个事件循环都要将 aof_buf 缓冲区中的所有内容写入到 AOF 文件，至于何时对 AOF 文件进行同步，则由操作系统控制。因为处于 no 模式下的 flushAppendOnlyFile 调用无须执行同步操作，所以该模式下的 AOF 文件写入速度总是最快的，不过因为这种模式会在系统缓存中积累一段时间的写入数据，所以该模式的单次同步时长通常是三种模式中时间最长的。从平摊操作的角度来看，no 模式和 everysec 模式的效率类似，当出现故障停机时，使用 no 模式的服务器将丢失上次同步 AOF 文件之后的所有写命令数据。</p><h4 id="文件写入"><a href="#文件写入" class="headerlink" title="文件写入"></a><strong>文件写入</strong></h4><p>（1）通过 write() 系统调用，将 aof_buf 缓冲区的数据写入到 AOF 文件，此时数据并没有写入到硬盘，而是拷贝到了内核缓冲区 page cache，等待内核将数据写入硬盘；</p><p>（2）具体内核缓冲区的数据什么时候写入到硬盘，由内核决定。</p><blockquote><p>为了提高文件的写入效率，在现代的操作系统中，当用户调用 write 函数，将一些数据写入到文件的时候，操作系统通常会将写入数据暂时保存在一个内存缓冲区里面，等到缓冲区的空间被填满、或者超过了指定的时限之后，才真正的将缓冲区中的数据写入到磁盘里。</p><p>这种做法虽然提高了效率，但是也为写入数据带来了安全问题，因为如果计算机发生停机，那么保存在内存缓冲区里的写入数据将会丢失。</p><p>为此，系统提供了 fsync 和 fdatafync 两个同步函数，它们可以强制让操作系统立即将缓冲区的数据写入到磁盘里面，从而确保写入数据的安全性。</p><p>AOF 文件的写入与同步，就好比你在 window 系统打开一个 word 文档，当你写一些内容时就相当于写入，但是你写的内容并没有真正的保存，而是放在一个缓冲区，如果这时关闭的话内容就会丢失。只有当你点击保存时内容才真正的保存（同步）到磁盘，点击保存就好比调用同步函数 fsync 和 fdatafync。</p></blockquote><h4 id="文件同步"><a href="#文件同步" class="headerlink" title="文件同步"></a><strong>文件同步</strong></h4><p>如果由内核决定将数据写入硬盘的话，如果服务器宕机，那么就会有数据丢失的风险。为了解决这个问题，系统提供了<strong>fsync和fdatasync两个同步函数</strong>和<strong>三种写回策略</strong>，它们可以强制让操作系统立即将缓冲区中的数据写入到硬盘里面，从而确保写入数据的安全性。</p><p>always：服务器在每次写操作后都将 aof_buf缓冲区中的所有内容写入到AOF文件，然后立即执行fsync()函数同步AOF文件到磁盘，所以always的效率是最慢的，但也是最安全的。可靠性高，性能低。</p><p>everysec：服务器在每次写操作后都要 将aof_buf缓冲区中的所有内容写入到AOF文件，并且每隔一秒就要在子线程中对AOF文件进行一次同步，创建一个异步任务执行fsync()函数。可靠性和性能都适中。</p><p>no：将缓冲区的内容写入AOF文件后，何时进行同步由操作系统控制，不执行fsync()函数。性能好，可靠性低，宕机可能会丢失较多数据。</p><p><img src="/../img/redis-aof/aof.png"></p><h3 id="3-AOF文件的载入与数据还原"><a href="#3-AOF文件的载入与数据还原" class="headerlink" title="3.AOF文件的载入与数据还原"></a>3.AOF文件的载入与数据还原</h3><p>因为 AOF 文件里面包含了重建数据库状态所需的所有写命令，所以服务器只要读入并重新执行一遍 AOF 文件里面保存的写命令，就可以还原服务器关闭之前的数据库状态。</p><ol><li><p>创建一个不带网络连接的伪客户端（fake client）：因为 Redis 的命令只能在客户端上下文中执行，而载入 AOF 文件时所使用的命令直接来源于 AOF 文件而不是网络连接，所以服务器使用了一个没有网络连接的伪客户端来执行 AOF 文件保存的写命令，伪客户端执行命令的效果和带网络连接的客户端执行命令的效果完全一样。</p></li><li><p>从 AOF 文件中分析并读取出一条写命令。</p></li><li><p>使用伪客户端执行被读出的写命令。</p></li><li><p>一直执行步骤2和步骤3，直到 AOF 文件中的所有写命令都被处理完毕为止。</p></li></ol><p>当完成以上步骤之后，AOF 文件所保存的数据库状态就会被完整地还原出来</p><p><img src="/../img/redis-aof/aof2.png"></p><h3 id="4-AOF重写"><a href="#4-AOF重写" class="headerlink" title="4.AOF重写"></a>4.AOF重写</h3><p>因为 AOF 持久化是通过保存被执行的写命令来记录数据库状态的，所以随着服务器运行时间的流逝，AOF 文件中的内容会越来越多，文件的体积也会越来越大，如果不加以控制的话，体积过大的 AOF 文件很可能对 Redis 服务器、甚至整个宿主计算机造成影响，并且 AOF 文件的体积越大，使用 AOF 文件来进行数据还原所需的时间就越长。</p><p>举个例子，如果客户端执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">redis&gt; RPUSH list <span class="hljs-string">&quot;A&quot;</span> <span class="hljs-string">&quot;B&quot;</span>          // [<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;B&quot;</span>]<br>(<span class="hljs-built_in">integer</span>) 2<br>redis&gt; RPUSH list <span class="hljs-string">&quot;C&quot;</span>              // [<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;C&quot;</span>]<br>(<span class="hljs-built_in">integer</span>) 3<br>redis&gt; RPUSH list <span class="hljs-string">&quot;D&quot;</span> <span class="hljs-string">&quot;E&quot;</span>          // [<span class="hljs-string">&quot;A&quot;</span>, <span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;E&quot;</span>]<br>(<span class="hljs-built_in">integer</span>) 5<br>redis&gt; LPOP list                   // [<span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;E&quot;</span>]<br><span class="hljs-string">&quot;A&quot;</span><br>redis&gt; LPOP list                   // [<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;E&quot;</span>]<br><span class="hljs-string">&quot;B&quot;</span><br>redis&gt; RPUSH list <span class="hljs-string">&quot;F&quot;</span> <span class="hljs-string">&quot;G&quot;</span>          // [<span class="hljs-string">&quot;C&quot;</span>, <span class="hljs-string">&quot;D&quot;</span>, <span class="hljs-string">&quot;E&quot;</span>, <span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;G&quot;</span>]<br>(<span class="hljs-built_in">integer</span>) 5<br></code></pre></td></tr></table></figure><p>那么只是为了记录这个 list 键的状态，AOF 文件就需要保存六条命令。</p><p>对于实际的应用来说，写命令执行的次数和频率会比上面的简单示例要高得多，所以造成的问题也严重得多。</p><p>为了解决 AOF 文件体积膨胀的问题，Redis 提供了 AOF 文件重写（rewirte）功能。通过该功能，Redis 服务器可以创建一个新的 AOF 文件，新旧两个 AOF 文件所保存的数据库状态相同，但新 AOF 文件不会包含任何浪费空间的冗余命令，所以新 AOF 文件的体积通常会比旧 AOF 文件的体积小很多。</p><h4 id="AOF-文件重写的实现"><a href="#AOF-文件重写的实现" class="headerlink" title="AOF 文件重写的实现"></a>AOF 文件重写的实现</h4><p>虽然 Redis 将生成新 AOF 文件替换旧 AOF 文件的功能命名为 “AOF 重写”，但实际上，AOF 文件重写并不需要对现有的 AOF 文件进行任何读取、分析或者写入操作，这个功能是通过读取服务器当前的数据库状态来实现的。</p><blockquote><p>例如上面的 list 的例子，服务器为了保存 list 键的状态，必须在 AOF 文件中写入六条命令。如果服务器想要尽量少的命令记录 list 键的状态，那么最简单高效的办法不是去读取和分析现有 AOF 文件的内容，而是直接从数据库中读取键 list 的值，然后用一条 RPUSH list “C” “D” “E” “F” “G” 命令来代替保存在 AOF 文件中的六条命令，这样就可以保存 list 键所需的命令从六条减少为一条了。</p></blockquote><blockquote><p>再举例，如果服务器对 animals 键执行了一下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">redis&gt; SADD animals <span class="hljs-string">&quot;Cat&quot;</span>                  // &#123;<span class="hljs-string">&quot;Cat&quot;</span>&#125;<br>(<span class="hljs-built_in">integer</span>) 1<br>redis&gt; SADD animals <span class="hljs-string">&quot;Dog&quot;</span> <span class="hljs-string">&quot;Panda&quot;</span> <span class="hljs-string">&quot;Tiger&quot;</span> // &#123;<span class="hljs-string">&quot;Cat&quot;</span>, <span class="hljs-string">&quot;Dog&quot;</span>, <span class="hljs-string">&quot;Panda&quot;</span>, <span class="hljs-string">&quot;Tiger&quot;</span>&#125;<br>(<span class="hljs-built_in">integer</span>) 3<br>redis&gt; SREM animals <span class="hljs-string">&quot;Cat&quot;</span>                 // &#123;<span class="hljs-string">&quot;Dog&quot;</span>, <span class="hljs-string">&quot;Panda&quot;</span>, <span class="hljs-string">&quot;Tiger&quot;</span>&#125;<br>(<span class="hljs-built_in">integer</span>) 1<br>redis&gt; SADD animals <span class="hljs-string">&quot;Lion&quot;</span> <span class="hljs-string">&quot;Cat&quot;</span>          // &#123;<span class="hljs-string">&quot;Dog&quot;</span>, <span class="hljs-string">&quot;Panda&quot;</span>, <span class="hljs-string">&quot;Tiger&quot;</span>, <span class="hljs-string">&quot;Lion&quot;</span>, <span class="hljs-string">&quot;Cat&quot;</span>&#125;<br>(<span class="hljs-built_in">integer</span>) 2                                    <br></code></pre></td></tr></table></figure><p>那么为了记录 animals 键的状态，AOF 文件必须保存上面列出的四条命令。</p><p>如果服务器想减少保存 animals 键所需命令的数量，那么服务器可以通过读取 animals 键的值，然后用一条 SADD animals “Dog” “Panda” “Tiger” “Lion” “Cat” 命令来代替上面的四条命令，这样就将保存 animals 键所需的命令从四条减少为一条了。</p></blockquote><p>除了上面列举的列表键和集合键之外，其他所有类型的键都可以用同样的方法去减少 AOF 文件中的命令数量。<strong>首先从数据库中读取键现在的值，然后用一条命令去记录键值对，代替之前记录这个键值对的多条命令，这就是AOF重写功能的实现原理</strong>。 </p><p><strong>因为 aof_rewrite 函数生成的新 AOF 文件只包含还原当前数据库状态所必须的命令，所以新 AOF 文件不会浪费任何硬盘空间</strong>。</p><blockquote><p>注意：</p><p>在实际中，为了避免在执行命令是造成客户端输入缓冲区溢出，重写程序在处理列表、哈希表、集合、有序集合这四种可能会带有多个元素的键时，会先检查所包含的元素数量，如果元素数量超过了 redis.h&#x2F;REDIS_AOF_REWRITE_ITEMS_PRE_CMD 常量的值，那么重写程序将使用多条命令来记录键的值，而不单单使用一条命令。</p><p>在目前版本中，REDIS_AOF_REWRITE_ITEMS_PRE_CMD 常量的值是64，也就是说，如果一个集合键包含了超过64个元素，那么重写程序会用多条 SADD 命令来记录这个集合，并且每条命令设置的元素数量也为64个。</p></blockquote><h4 id="AOF-后台重写"><a href="#AOF-后台重写" class="headerlink" title="AOF 后台重写"></a>AOF 后台重写</h4><p>上面介绍的 AOF 重写程序 aof_rewrite 函数可以很好的创建一个新 AOF 文件的任务，但是因为这个函数会进行大量的写入操作，所以调用这个函数的线程将被长时间阻塞，因为 Redis 服务器使用单个线程来处理命令请求，所以如果由服务器直接调用aof_rewrite 函数的话，那么在重写 AOF 文件期间，服务器将无法处理客户端发来的命令请求。</p><p>所以 Redis 决定将 AOF 重写程序放到子进程里执行，这样做可以同时达到两个目的：</p><p>1.子进程进行 AOF 重写期间，服务器（父进程）可以继续处理命令请求。</p><p>2.子进程带有服务器进程的数据副本，使用子进程而不是线程，可以在避免使用锁的情况下，保证数据的安全性。</p><p>但是，使用子进程也有一个问题需要解决，因为子进程在进行 AOF 重写期间，服务器进程还需要继续处理命令请求，而新的命令可能会对现有的数据库状态进行修改，从而使得服务器当前的数据库状态和重写后的 AOF 文件所保存的数据库状态不一致。</p><p>为了解决数据不一致问题，Redis 服务器设置了一个 AOF 重写缓冲区，这个缓冲区在服务器创建子进程之后开始使用，当 Redis 服务器执行完一个写命令之后，它会同时将这个写命令发送给 AOF 缓冲区和 AOF 重写缓冲区，如图所示。</p><p><img src="/../img/redis-aof/aof3.png"></p><p>这样在子进程重写AOF时，主进程会执行以下工作：</p><p>（1）执行客户端发来的命令。</p><p>（2）将执行后的写命令追加到AOF缓冲区。AOF缓冲区的内容会定期被写入和同步到AOF文件，对现有AOF 文件的处理工作会如常进行。</p><p>（3）将执行后的写命令追加到AOF重写缓冲区。从创建子进程开始，服务器执行的所有写命令都会被记录到AOF 重写缓冲区里面。</p><p>这样一来可以保证：</p><ul><li>AOF 缓冲区的内容会定期被写入和同步到 AOF 文件，对现有 AOF 文件的处理工作会如常进行。</li><li>从创建子进程开始，服务器执行的所有写命令都会被记录到 AOF 重写缓冲区里面。</li></ul><p>当子进程完成 AOF 重写工作之后，它会向父进程发送一个信号，父进程在接到该信号后，会调用一个信号处理函数，并执行一下工作：</p><ol><li><p>将 AOF 重写缓冲区中的所有内容写入到新 AOF 文件中，这是新的 AOF 文件所保存的数据库状态将和服务器当前的数据库状态一致。</p></li><li><p>对新的 AOF 文件进行改名，原子地（atomic）覆盖现有的 AOF 文件，完成新旧两个 AOF 文件的替换。</p></li></ol><p>这个信号处理函数执行完毕之后，父进程就可以继续像往常一样接受命令请求了。</p><p><strong>在整个 AOF 后台重写过程中，只有信号处理函数执行时会对服务器进程（父进程）造成阻塞，在其他时候，AOF 后台重写不会阻塞父进程</strong>，这将 AOF 重写对服务器性能造成的影响降到了最低。</p><p>以上就是 AOF 后台重写，也即是 BGREWRITEAOF命令的实现原理。</p>]]></content>
    
    
    <categories>
      
      <category>redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>redis持久化之RDB</title>
    <link href="/2023/05/10/redis-rdb/"/>
    <url>/2023/05/10/redis-rdb/</url>
    
    <content type="html"><![CDATA[<h1 id="redis持久化-RDB"><a href="#redis持久化-RDB" class="headerlink" title="redis持久化-RDB"></a>redis持久化-RDB</h1><p>RDB是Redis用来进行持久化的一种方式，是把当前内存中的数据集快照写入磁盘，也就是 Snapshot 快照（数据库中所有键值对数据）。恢复时是将快照文件直接读到内存里。</p><h2 id="触发方式"><a href="#触发方式" class="headerlink" title="触发方式"></a>触发方式</h2><p>RDB 有两种触发方式，分别是自动触发和手动触发。</p><h3 id="自动触发"><a href="#自动触发" class="headerlink" title="自动触发"></a>自动触发</h3><p>在 redis.conf 配置文件中</p><p><strong>save：</strong>这里是用来配置触发 Redis的 RDB 持久化条件，也就是什么时候将内存中的数据保存到硬盘。比如“save m n”。表示m秒内数据集存在n次修改时，自动触发bgsave</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">save</span> <span class="hljs-number">900</span> <span class="hljs-number">1</span>：表示<span class="hljs-number">900</span> 秒内如果至少有 <span class="hljs-number">1</span> 个 key 的值变化，则保存<br><span class="hljs-attribute">save</span> <span class="hljs-number">300</span> <span class="hljs-number">10</span>：表示<span class="hljs-number">300</span> 秒内如果至少有 <span class="hljs-number">10</span> 个 key 的值变化，则保存<br><span class="hljs-attribute">save</span> <span class="hljs-number">60</span> <span class="hljs-number">10000</span>：表示<span class="hljs-number">60</span> 秒内如果至少有 <span class="hljs-number">10000</span> 个 key 的值变化，则保存<br></code></pre></td></tr></table></figure><p>当然如果你只是用Redis的缓存功能，不需要持久化，那么你可以注释掉所有的 save 行来停用保存功能。可以直接一个空字符串来实现停用：save “”</p><p><strong>stop-writes-on-bgsave-error ：</strong>默认值为yes。当启用了RDB且最后一次后台保存数据失败，Redis是否停止接收数据。这会让用户意识到数据没有正确持久化到磁盘上，否则没有人会注意到灾难（disaster）发生了。如果Redis重启了，那么又可以重新开始接收数据了</p><p><strong>rdbcompression ；</strong>默认值是yes。对于存储到磁盘中的快照，可以设置是否进行压缩存储。如果是的话，redis会采用LZF算法进行压缩。如果你不想消耗CPU来进行压缩的话，可以设置为关闭此功能，但是存储在磁盘上的快照会比较大。</p><p><strong>rdbchecksum ：</strong>默认值是yes。在存储快照后，我们还可以让redis使用CRC64算法来进行数据校验，但是这样做会增加大约10%的性能消耗，如果希望获取到最大的性能提升，可以关闭此功能。</p><p><strong>dbfilename ：</strong>设置快照的文件名，默认是 dump.rdb</p><p><strong>dir：</strong>设置快照文件的存放路径，这个配置项一定是个目录，而不能是文件名。默认是和当前配置文件保存在同一目录。</p><h3 id="手动触发"><a href="#手动触发" class="headerlink" title="手动触发"></a>手动触发</h3><p>手动触发Redis进行RDB持久化的命令有两种：</p><p>　　1、save</p><p>　　该命令会阻塞当前Redis服务器，执行save命令期间，Redis不能处理其他命令，直到RDB过程完成为止。</p><p>　　显然该命令对于内存比较大的实例会造成长时间阻塞，这是致命的缺陷，为了解决此问题，Redis提供了第二种方式。</p><p>　　2、bgsave</p><p>　　执行该命令时，Redis会在后台异步进行快照操作，快照同时还可以响应客户端请求。具体操作是Redis进程执行fork操作创建子进程，RDB持久化过程由子进程负责，完成后自动结束。阻塞只发生在fork阶段，一般时间很短。</p><p>　　<strong>基本上 Redis 内部所有的RDB操作都是采用 bgsave 命令。</strong></p><p>　　<strong>ps:执行执行 flushall 命令，也会产生dump.rdb文件，但里面是空的，无意义</strong></p><h2 id="RDB执行流程"><a href="#RDB执行流程" class="headerlink" title="RDB执行流程"></a>RDB执行流程</h2><h3 id="全量快照"><a href="#全量快照" class="headerlink" title="全量快照"></a>全量快照</h3><p>Redis中的RDB持久化方式，采用了写时复制技术（copy on write）和fork子进程。</p><p><img src="/../img/redis-rdb/rdb1.png" alt="rdb-bgsave工作流程"></p><p>快照开始时，主线程会fork出一个用于快照操作的子线程，并且复制一份数据对应的映射页表给子线程。子线程可以通过这个页表访问主线程的原始数据，然后将数据生成快照文件，存储到磁盘中。我们知道存储磁盘的时间是比较长的，当这个时候有请求进行想写数据怎么办呢？</p><p>这个时候就要用到 写时复制，即当请求需要对键值C进行操作时，主线程会把新数据或修改后的数据写到一个新的物理内存地址上（键值对C’），并修改主线程自己的页表映射。所以，子进程读到的类似于原始数据的一个副本，而主线程也可以正常进行修改。</p><p>这既保证了快照的完整性，也允许主线程同时对数据进行修改，避免了对正常业务的影响。</p><h3 id="增量快照"><a href="#增量快照" class="headerlink" title="增量快照"></a>增量快照</h3><p>如果一直使用全量同步，一方面时间的推移，磁盘存储的快照文件会越来越多。另一方面如果频繁的进行全量同步，则需要主线线程频繁的fork出bgsvae线程，这样对Redis的性能是会产生影响的，并且也需要持续的对磁盘进行写操作。</p><p> 这个时候，我们可以采用另一只同步方式：增量快照。所谓增量快照，就是指，做了一次全量快照后，后续的快照只对修改的数据进行快照记录，这样可以避免每次全量快照的开销。在第一次做完全量快照后，T1 和 T2 时刻如果再做快照，我们只需要将被修改的数据写入快照文件就行。但是，这么做的前提是，我们需要记住哪些数据被修改了。你可不要小瞧这个“记住”功能，它需要我们使用额外的元数据信息去记录哪些数据被修改了，这会带来额外的空间开销问题。如下图所示：</p><p><img src="/../img/redis-rdb/rdb2.png"></p><p>如果我们对每一个键值对的修改，都做个记录，那么，如果有 1 万个被修改的键值对，我们就需要有 1 万条额外的记录。而且，有的时候，键值对非常小，比如只有 32 字节，而记录它被修改的元数据信息，可能就需要 8 字节，这样的画，为了“记住”修改，引入的额外空间开销比较大。这对于内存资源宝贵的 Redis 来说，有些得不偿失。</p><p>所以说，全量快照和增量快照都有各自的优点和缺点，至于实际应用时，则要根据具体情况进行权衡。</p><h2 id="RDB-的优势和劣势"><a href="#RDB-的优势和劣势" class="headerlink" title="RDB 的优势和劣势"></a>RDB 的优势和劣势</h2><h3 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h3><p>1.RDB是一个非常紧凑(compact)的文件，它保存了redis 在某个时间点上的数据集。这种文件非常适合用于进行备份和灾难恢复。</p><p>2.生成RDB文件的时候，redis主进程会fork()一个子进程来处理所有保存工作，主进程不需要进行任何磁盘IO操作。</p><p>3.RDB 在恢复大数据集时的速度比 AOF 的恢复速度要快。</p><h3 id="劣势"><a href="#劣势" class="headerlink" title="劣势"></a>劣势</h3><p>1、RDB方式数据没办法做到实时持久化&#x2F;秒级持久化。因为bgsave每次运行都要执行fork操作创建子进程，属于重量级操作(内存中的数据被克隆了一份，大致2倍的膨胀性需要考虑)，频繁执行成本过高(影响性能)</p><p>2、RDB文件使用特定二进制格式保存，Redis版本演进过程中有多个格式的RDB版本，存在老版本Redis服务无法兼容新版RDB格式的问题(版本不兼容)</p><p>3、在一定间隔时间做一次备份，所以如果redis意外down掉的话，就会丢失最后一次快照后的所有修改(数据有丢失)</p>]]></content>
    
    
    <categories>
      
      <category>redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VSCode代码块无法自动补全</title>
    <link href="/2023/05/04/vscode-code-snippet/"/>
    <url>/2023/05/04/vscode-code-snippet/</url>
    
    <content type="html"><![CDATA[<h1 id="VSCode代码块无法自动补全"><a href="#VSCode代码块无法自动补全" class="headerlink" title="VSCode代码块无法自动补全"></a>VSCode代码块无法自动补全</h1><p><strong>触发条件</strong>：第一次使用代码补全功能，且光标落在了自动补全的默认区域形成了灰色背景区域</p><p><strong>触发现象</strong>：连续（第二次）自动补充和基本的代码提示功能失效</p><p><strong>恢复措施</strong>：光标离开默认区域，将编码状态重置为第一次自动补充，而非第二次自动补充（连续自动补充）</p><p>从前面的3点中可以看出，这个现象和代码补充、代码片段有关系</p><p>Code snippet (代码片段)在vscode中指的是基于IDE支持的利用快捷方式快速输入一小段，或者称之为一整块代码的功能，在日常编程，特别是在工作中写内容相似的业务代码时，利用snippet功能，可以极大加快编程效率</p><p>关键词snippet，在setting中搜索后的结果就是这样，可以看到整体分为，文本编辑器和扩展，其实就可以理解为vscode 自带的、通用的和自己下载的第三方插件，我们就着重看下文本编辑器里面的。可以看到第三个设置控制活动代码段是否阻止快速建议，这里是阻止了活动代码的快速建议。</p><p><img src="/../img/vscode-snippet/snippet-setting.png" alt="setting"></p><p>我们将√取消掉，再次尝试，发现一切就正常了</p>]]></content>
    
    
    <categories>
      
      <category>开发工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTTP三次握手四次挥手</title>
    <link href="/2023/05/03/establish-http-connection/"/>
    <url>/2023/05/03/establish-http-connection/</url>
    
    <content type="html"><![CDATA[<h1 id="通俗易懂地描述HTTP三次握手四次挥手"><a href="#通俗易懂地描述HTTP三次握手四次挥手" class="headerlink" title="通俗易懂地描述HTTP三次握手四次挥手"></a>通俗易懂地描述HTTP三次握手四次挥手</h1><h2 id="HTTP简介"><a href="#HTTP简介" class="headerlink" title="HTTP简介"></a>HTTP简介</h2><p>​超文本传输协议（英文：<strong>H</strong>yper<strong>T</strong>ext <strong>T</strong>ransfer <strong>P</strong>rotocol，缩写：HTTP）是一种用于分布式、协作式和超媒体信息系统的应用层协议。HTTP是万维网的数据通信的基础。</p><p>​HTTP的发展是由蒂姆·伯纳斯-李于1989年在欧洲核子研究组织（CERN）所发起。HTTP的标准制定由万维网协会（World Wide Web Consortium，W3C）和互联网工程任务组（Internet Engineering Task Force，IETF）进行协调，最终发布了一系列的RFC，其中最著名的是1999年6月公布的 RFC 2616，定义了HTTP协议中现今广泛使用的一个版本——HTTP 1.1。</p><p>​2014年12月，互联网工程任务组（IETF）的Hypertext Transfer Protocol Bis（httpbis）工作小组将HTTP&#x2F;2标准提议递交至IESG进行讨论，于2015年2月17日被批准。 HTTP&#x2F;2标准于2015年5月以RFC 7540正式发表，取代HTTP 1.1成为HTTP的实现标准。</p><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>HTTP 是基于TCP的，建立一个HTTP连接本质上就是建立一个TCP连接，TCP连接是全双工的，全双工的连接意味着客户端可以向服务端发送数据，服务端也可以向客户端发送数据。为了方便理解，我们可以把建立TCP连接看作在客户端与服务端之间建立两个通道，一个用于客户端给服务端发送数据（socketChannel），一个用于服务端给客户端发送数据(serverSocketChannel)。</p><h2 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h2><p><img src="/../img/http1.png" alt="三次握手"></p><h4 id="三次握手流程："><a href="#三次握手流程：" class="headerlink" title="三次握手流程："></a>三次握手流程：</h4><p>第一次握手：建立连接时，客户端发送syn包（syn&#x3D;x）到服务器，并进入SYN_SENT状态，等待服务器确认；SYN：同步序列编号（Synchronize Sequence Numbers）。<br>第二次握手：服务器收到syn包，必须确认客户的SYN（ack&#x3D;x+1），同时自己也发送一个SYN包（syn&#x3D;y），即SYN+ACK包，此时服务器进入SYN_RECV状态；<br>第三次握手：客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack&#x3D;y+1），此包发送完毕，客户端和服务器进入ESTABLISHED（TCP连接成功）状态，完成三次握手。</p><p>上述流程可理解为：</p><p>1.客户端向服务端发送建立通道(socketChannel)的请求</p><p>2.服务端同意客户端的请求，此时建立客户端向服务端发送数据的通道(socketChannel)</p><p>3.服务端发送确认连接的消息，同时携带服务端请求建立通道（serverSocketChannel）的请求</p><p>4.客户端收到服务端建立完毕（socketChannel）的确认消息，并同意建立（serverSocketChannel）</p><p>5.客户端发送建立（serverSocketChannel）的确认信息</p><p>6.服务端收到确认信息，此时双方连接建立</p><h4 id="为什么连接建立需要三次握手，而不是两次握手？"><a href="#为什么连接建立需要三次握手，而不是两次握手？" class="headerlink" title="为什么连接建立需要三次握手，而不是两次握手？"></a><strong>为什么连接建立需要三次握手，而不是两次握手？</strong></h4><p>防止失效的连接请求报文段被服务端接收，从而产生错误。</p><p>PS：失效的连接请求：若客户端向服务端发送的连接请求丢失，客户端等待应答超时后就会再次发送连接请求，此时，上一个连接请求就是『失效的』。</p><p>若建立连接只需两次握手，客户端并没有太大的变化，仍然需要获得服务端的应答后才进入ESTABLISHED状态，而服务端在收到连接请求后就进入ESTABLISHED状态。</p><p>此时如果网络拥塞，客户端发送的连接请求迟迟到不了服务端，客户端便超时重发请求，如果服务端正确接收并确认应答，双方便开始通信，通信结束后释放连接。此时，如果那个失效的连接请求抵达了服务端，由于只有两次握手，服务端收到请求就会进入ESTABLISHED状态，等待发送数据或主动发送数据。但此时的客户端早已进入CLOSED状态，服务端将会一直等待下去，这样浪费服务端连接资源。</p><h2 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h2><p><img src="/../img/http2.png" alt="四次挥手"></p><h3 id="四次挥手的流程："><a href="#四次挥手的流程：" class="headerlink" title="四次挥手的流程："></a>四次挥手的流程：</h3><p>1.客户端进程发出连接释放报文，并且停止发送数据。释放数据报文首部，FIN&#x3D;1，其序列号为seq&#x3D;u（等于前面已经传送过来的数据的最后一个字节的序号加1），此时，客户端进入FIN-WAIT-1（终止等待1）状态。 TCP规定，FIN报文段即使不携带数据，也要消耗一个序号。</p><p>2.服务器收到连接释放报文，发出确认报文，ACK&#x3D;1，ack&#x3D;u+1，并且带上自己的序列号seq&#x3D;v，此时，服务端就进入了CLOSE-WAIT（关闭等待）状态。TCP服务器通知高层的应用进程，客户端向服务器的方向就释放了，这时候处于半关闭状态，即客户端已经没有数据要发送了，但是服务器若发送数据，客户端依然要接受。这个状态还要持续一段时间，也就是整个CLOSE-WAIT状态持续的时间。<br>3.客户端收到服务器的确认请求后，此时，客户端就进入FIN-WAIT-2（终止等待2）状态，等待服务器发送连接释放报文（在这之前还需要接受服务器发送的最后的数据）。</p><p>4.服务器将最后的数据发送完毕后，就向客户端发送连接释放报文，FIN&#x3D;1，ack&#x3D;u+1，由于在半关闭状态，服务器很可能又发送了一些数据，假定此时的序列号为seq&#x3D;w，此时，服务器就进入了LAST-ACK（最后确认）状态，等待客户端的确认。</p><p>5.客户端收到服务器的连接释放报文后，必须发出确认，ACK&#x3D;1，ack&#x3D;w+1，而自己的序列号是seq&#x3D;u+1，此时，客户端就进入了TIME-WAIT（时间等待）状态。注意此时TCP连接还没有释放，必须经过2∗∗MSL（最长报文段寿命）的时间后，当客户端撤销相应的TCB后，才进入CLOSED状态。</p><p>6.服务器只要收到了客户端发出的确认，立即进入CLOSED状态。同样，撤销TCB后，就结束了这次的TCP连接。可以看到，服务器结束TCP连接的时间要比客户端早一些。</p><p>上述流程可理解为：</p><p>1.客户端发送关闭（socketChannel）的请求</p><p>2.服务端确认关闭（socketChannel）并发送确认信息</p><p>3.客户端接收到确认信息，并等待服务端发送关闭（serverSocketChannel的信息）</p><p>Q：为什么服务端不直接将关闭（serverSocketChannel）的请求连同确认信息一同发送呢？</p><p>A：关闭连接时，客户端向服务端发送 FIN 时，仅仅表示客户端不再发送数据了但是还能接收数据。服务器收到客户端的 FIN 报⽂时，先回⼀个 ACK 应答报⽂，⽽服务端可能还有数据需要处理和发送，等服务端不再发送数据时，才发送 FIN 报⽂给客户端来表示同意现在关闭连接。（socketChannel关闭了，但是服务端还有数据要发送，不能直接关闭serverSocketChannel，要继续通过它发送剩余数据）。</p><p>4.服务端数据发送完毕，发送关闭（serverSocketChannel）的请求</p><p>5.客户端收到请求关闭（serverSocketChannel），并发送确认信息</p><p>6.服务端收到确认信息，此时双方连接关闭</p><h3 id="为什么需要四次挥手？"><a href="#为什么需要四次挥手？" class="headerlink" title="为什么需要四次挥手？"></a><strong>为什么需要四次挥手？</strong></h3><p>关闭连接时，客户端向服务端发送 FIN 时，仅仅表示客户端不再发送数据了但是还能接收数据。</p><p>服务器收到客户端的 FIN 报⽂时，先回⼀个 ACK 应答报⽂，⽽服务端可能还有数据需要处理和发送，等服务端不再发送数据时，才发送 FIN 报⽂给客户端来表示同意现在关闭连接。 从上⾯过程可知，TCP 是全双工模式，并且支持半关闭特性，提供了连接的一端在结束发送后还能接收来自另一端数据的能力。任何一方都可以在数据传送结束后发出连接释放的通知，待对方确认后进入半关闭状态。当另一方也没有数据再发送的时候，则发出连接释放通知，对方确认后就完全关闭了 TCP 连接。</p><p>通俗的来说，两次握手就可以释放一端到另一端的 TCP 连接，完全释放连接一共需要四次握手。</p>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MinIO 介绍使用</title>
    <link href="/2023/05/02/MinIo/"/>
    <url>/2023/05/02/MinIo/</url>
    
    <content type="html"><![CDATA[<h1 id="MinIO-介绍使用"><a href="#MinIO-介绍使用" class="headerlink" title="MinIO 介绍使用"></a>MinIO 介绍使用</h1><h1 id="MinIO-介绍"><a href="#MinIO-介绍" class="headerlink" title="MinIO 介绍"></a>MinIO 介绍</h1><p>MinIO 是一款基于Go语言发开的高性能、分布式的对象存储系统。客户端支持Java,Net,Python,Javacript, Golang语言。</p><p><a href="https://docs.min.io/">MinIO 英文官网</a> <a href="http://docs.minio.org.cn/docs/">MinIO 中文官网</a> 注意：中文官方更新不及时，会有很多坑，请以英文官网为准。</p><h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><p>1、Object：存储到minio的基本对象，如文件，字节流，Anything。。。。</p><p>2、Bucket：用来存储Object的逻辑空间。每个Bucket之间的数据是互相隔离的。对于客户端而言，就相当于存放文件的顶层文件夹。</p><p>3、Drlve：存储数据的磁盘，在MinIO启动时，以参数的方式传入。MinIO中所有的对象数据都会存在Drive里。</p><p>4、Set：即一组 Drive的集合，分布式部署根据集群规模自动划分一个或者多个Set，每个Set中的Drive 分布在不同位置。一个对象存储在一个Set上。</p><p>4.1、一个对象存储在一个Set上。</p><p>4.2、一个集群划分为多个Set。</p><p>4.3、一个Set包含的Drive数量是固定的，默认由系统根据集群规模自动计算得出。</p><p>4.4、一个Set中的drive 尽可能分布在不同的节点上。</p><p>5、纠删码：Minio 使用纠删码机制来保证高可靠性。</p><p>5.1、使用highwayhash来处理数据损坏（Bit Rot Protectio）。关于纠删码，简单来说就是可以通过数学计算，把丢失的数据进行还原。</p><p>5.2、纠删码是恢复丢失和算怀数据的数学算法，minio采用reed-solomincode将对象拆分成N&#x2F;2数据和N&#x2F;2奇偶校验块。这就意味着如果是12块盘，一个对象会被分成6个数据快、6个奇偶校验块，你可以丢失任意6块盘（不管其存放的是数据块还是奇偶校验块），你任可以从剩下的盘中的数据进行恢复。</p><p>5.2、纠删码模式，把数据分成 DATA BLOCk：数据块、 PARITY BLOCK：校验块。一个BLOCK 10M左右，如果一个文件小于10M，就以文件大小进行分块。如果一个文件大于10m，就以10M为一个文件单位进行分块。</p><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><p>1、互联网非结构化数据的存储需求</p><p>​1.1 、电商网站：海量商品图片</p><p>2.1、视频网站：海量视频文件</p><p>3.1、网盘：海量文件</p><h2 id="MinIO优势"><a href="#MinIO优势" class="headerlink" title="MinIO优势"></a>MinIO优势</h2><p>1、数据保护</p><p>​1.1、分布式MInio采用纠删码来放反多个节点待机和位衰减 bit rot</p><p>​1.2、分布式Minio至少需要4个硬盘，使用分布式Minio自动引入了纠删码功能。</p><p>2、高可用</p><p>​2.1、单机Minio服务存在单点故障，相反，如果是有一个N快硬盘的分布式Minio，只要有N&#x2F;2硬盘在线，你的数据就是安全的。不过你需要至少有N&#x2F;2+1个硬盘来创建新的对象。</p><p>​2.2、例如，一个16节点的Minio集群，每个节点16块块硬盘，计算8台服务器宕机，这个集群仍然是可读的，不过你需要9台服务器才能写入数据。</p><p>3、一致性</p><p>​3.1、Minio在分布式和单机模式下，所有读写炒作都严格遵守read-after-write 一致性模型</p><h1 id="MinIO-使用"><a href="#MinIO-使用" class="headerlink" title="MinIO 使用"></a>MinIO 使用</h1><h2 id="使用【服务端】"><a href="#使用【服务端】" class="headerlink" title="使用【服务端】"></a>使用【服务端】</h2><h3 id="单机模式-（linux部署）"><a href="#单机模式-（linux部署）" class="headerlink" title="单机模式 （linux部署）"></a>单机模式 （linux部署）</h3><p>ps：初始用户名密码：minioadmin</p><p>1、下载linux minio， wget <a href="https://dl.min.io/server/minio/release/linux-amd64/minio">https://dl.min.io/server/minio/release/linux-amd64/minio</a></p><p>2、linux部署</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">修改用户名密码：<br>export MINIO_ROOT_USER=username<br>export MINIO_ROOT_PASSWORD=password<br><br>启动：<br>./minio server --console-address &quot;:9090&quot; /mnt/data<br><br>后台启动，指定日志路径：<br>nohup ./minio server --console-address :&quot;9090&quot; ./miniodata/data &gt;./miniodata/minio.log 2&gt;&amp;1 &amp;<br><br>ps：接口默认地址：9000<br>指定console端口：9090<br></code></pre></td></tr></table></figure><p>3、docker部署</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run \<br>  -p 9000:9000 \<br>  -p 9001:9001 \<br>  -e &quot;MINIO_ROOT_USER=AKIAIOSFODNN7EXAMPLE&quot; \<br>  -e &quot;MINIO_ROOT_PASSWORD=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY&quot; \<br>  quay.io/minio/minio server /data --console-address &quot;:9001&quot;<br></code></pre></td></tr></table></figure><p>4、docker部署纠删码模式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d -p 9000:9000 -p 9090:9090 --name minio \<br> -v /mnt/data1:/data1 \<br> -v /mnt/data2:/data2 \<br> -v /mnt/data3:/data3 \<br> -v /mnt/data4:/data4 \<br> -v /mnt/data5:/data5 \<br> -v /mnt/data6:/data6 \<br> -v /mnt/data7:/data7 \<br> -v /mnt/data8:/data8 \<br>minio/minio server /data&#123;1...8&#125; --console-address &quot;:9090&quot;<br></code></pre></td></tr></table></figure><p>5、缺点：单点故障，直接宕机</p><h3 id="分布式部署"><a href="#分布式部署" class="headerlink" title="分布式部署"></a>分布式部署</h3><p>注意事项：</p><p>1、linux部署：启动一个分布式Minio实例，你只需要把硬盘位置作为参数传给minio server命令即可，然后，你需要在所有其他节点运行同样的命令。</p><p>2、分布式Minio里所有的节点需要有同样的access秘钥和secret秘钥，这样这些节点才能建立连接。为了实现这个，你需要在执行minioserver命令前，先将access秘钥和secret秘钥expoert成环境变量。新版本使用MINIO_ROOT_USER&amp;MINIO_ROOTPASSWORD。</p><p>3、【举例1】8个节点，每个节点1块盘。启动分布式Minio实例，8个节点，每节点1块盘，需要再8个节点上都运行下面的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">export MINIO_ROOT_USER=admin<br>export MINIO_ROOT_PASSWORD=123456<br></code></pre></td></tr></table></figure><p>【举例1.1】下面示例的IP仅供示例参考没需要改成你真实的IP地址和文件夹路径。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">minio server http://192.168.1.11/export1 \<br>http://192.168.1.12/export2 \<br>http://192.168.1.13/export3 \<br>http://192.168.1.14/export4 \<br>http://192.168.1.15/export5 \<br>http://192.168.1.16/export6 \<br>http://192.168.1.17/export7 \<br>http://192.168.1.18/export8 \<br></code></pre></td></tr></table></figure><p>【举例2】4个节点，每个节点2块盘。启动分布式Minio实例，4个节点，每节点2块盘，需要再4个节点上都运行下面的命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">export MINIO_ROOT_USER=admin<br>export MINIO_ROOT_PASSWORD=123456<br></code></pre></td></tr></table></figure><p>【举例2.1】下面示例的IP仅供示例参考没需要改成你真实的IP地址和文件夹路径。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell">http://192.168.1.11/export1 \<br>http://192.168.1.11/export2 \<br>http://192.168.1.12/export1 \<br>http://192.168.1.12/export2 \<br>http://192.168.1.13/export1 \<br>http://192.168.1.13/export2 \<br>http://192.168.1.14/export1 \<br>http://192.168.1.14/export2 \<br></code></pre></td></tr></table></figure><p> 5、统一入口：使用Nginx 统一入口，可以做ip hash策略分散服务器压力。</p><p>【例如 ：】</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">upstream</span> minio &#123;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.1.11:9001</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.1.12:9001</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.1.13:9001</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.1.14:9001</span>;<br>&#125;<br><br><span class="hljs-section">upstream</span> console &#123;<br>    ip_hash;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.1.11:5001</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.1.12:5002</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.1.13:5003</span>;<br>    <span class="hljs-attribute">server</span> <span class="hljs-number">192.168.1.14:5004</span>;<br>&#125;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>      <span class="hljs-number">9000</span>;<br>    <span class="hljs-attribute">listen</span> [::] <span class="hljs-number">9000</span>;<br>    <span class="hljs-attribute">server_name</span> localhost;<br>    <br>    <span class="hljs-attribute">localhost</span> / &#123;<br>    <br>        <span class="hljs-attribute">proxy_pass</span> http://minio;<br>    &#125;<br>&#125;<br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>      <span class="hljs-number">5000</span>;<br>    <span class="hljs-attribute">listen</span> [::] <span class="hljs-number">5000</span>;<br>    <span class="hljs-attribute">server_name</span> localhost;<br>    <br>    <span class="hljs-attribute">localhost</span> / &#123;<br>    <br>    <span class="hljs-attribute">proxy_pass</span> http://console;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>6、<a href="https://docs.min.io/docs/deploy-minio-on-docker-compose.html">docker-compose部署</a></p><h2 id="使用【客户端】"><a href="#使用【客户端】" class="headerlink" title="使用【客户端】"></a>使用【客户端】</h2><p>介绍：MinIO Clinet(mc) 为ls,cat，cp，mirror，diff,find 等UNIX命令提供一种替代方案。它支持文件系统和兼容Amazon S3的云存储服务（AWS Signature v2和v4）。</p><h3 id="Windows-部署"><a href="#Windows-部署" class="headerlink" title="Windows 部署"></a>Windows 部署</h3><p>ps:注意9001 是接口端口，不是console端口。</p><p>1、下载 </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>dl.min.io<span class="hljs-regexp">/client/m</span>c<span class="hljs-regexp">/release/</span>linux-amd64/mc <br></code></pre></td></tr></table></figure><p>2、赋予权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> +x mc<br>./mc --<span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><p>3、查询mc host配置</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mc config host ls<br></code></pre></td></tr></table></figure><p>　　4、 添加minio服务</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mc config host add minio-server http:<span class="hljs-comment">//81.70.144.153:9001/</span><br>minioadmin minioadmin<br></code></pre></td></tr></table></figure><p>　　5、 mc命令【管理文件】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 加入配置文件：</span><br>mc config host add minio01 http://81.70.144.153:9000 minioadmin minioadmin<br><br><span class="hljs-comment"># 连接查看minio文件内容：</span><br>mc <span class="hljs-built_in">ls</span> tuling minio01<br><br><span class="hljs-comment"># 下载文件</span><br>mc <span class="hljs-built_in">cp</span> minio01/yeb/数据结构算法面试题.txt D:\<br><br><span class="hljs-comment"># 上传文件</span><br>mc <span class="hljs-built_in">cp</span> D:\测试.txt minio01/yeb<br><br><span class="hljs-comment"># 删除文件</span><br>mc <span class="hljs-built_in">rm</span> minio01/yeb/测试.txt<br></code></pre></td></tr></table></figure><p>6、mc命令【管理桶（Bucket）】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建bucket</span><br>mc mb minio01/yeb1<br><br><span class="hljs-comment"># 删除bucket(有数据删除失败)</span><br>mc rb minio01/yeb1<br><br><span class="hljs-comment"># bucket不为空，强制删除，慎用</span><br>mc rb --force minio01/yeb1<br><br><span class="hljs-comment"># 查看bucket磁盘使用情况</span><br>mc <span class="hljs-built_in">du</span> minio01/yeb<br></code></pre></td></tr></table></figure><p>7、mc命令【admin使用】</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs routeros">Minio<span class="hljs-built_in"> Client </span>提供了‘admin’子命令来对minio部署执行管理任务<br><span class="hljs-built_in"></span><br><span class="hljs-built_in">service </span>服务器停止并且重启所有Minio服务器<br>udpate 更新所有MInio服务器<br><span class="hljs-built_in">info</span> 显示minio服务器信息<span class="hljs-built_in"></span><br><span class="hljs-built_in">user </span>管理用户<span class="hljs-built_in"></span><br><span class="hljs-built_in">group </span>管理小组<span class="hljs-built_in"></span><br><span class="hljs-built_in">policy </span>minio服务器中定义策略管理<br>cofnig 配置管理minio服务器<br>heal 修复minio服务器上的磁盘、桶、对象<span class="hljs-built_in"></span><br><span class="hljs-built_in">profile </span>生成概要文件数据进行调试<br>top 顶部提供minio统计信息<br>trace 跟踪显示minio服务器的http跟踪<span class="hljs-built_in"></span><br><span class="hljs-built_in">console </span>控制台显示minio服务器的控制台日志<br>prometheus prometheys配置<br>kms kms管理操作<br></code></pre></td></tr></table></figure><h2 id="官方-Java-demo使用"><a href="#官方-Java-demo使用" class="headerlink" title="官方 Java demo使用"></a><a href="https://github.com/minio/minio-java">官方 Java demo使用</a></h2><h3 id="附：content-type-与后缀名对应"><a href="#附：content-type-与后缀名对应" class="headerlink" title="附：content-type 与后缀名对应"></a>附：content-type 与后缀名对应</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;.*&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/octet-stream&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.001&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-001&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.301&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-301&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.323&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/h323&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.906&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-906&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.907&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;drawing/907&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.a11&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-a11&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.acp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/x-mei-aac&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ai&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/postscript&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.aif&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/aiff&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.aifc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/aiff&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.aiff&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/aiff&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.anv&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-anv&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.asa&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/asa&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.asf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-ms-asf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.asp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/asp&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.asx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-ms-asf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.au&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/basic&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.avi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/avi&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.awf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.adobe.workflow&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.biz&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.bmp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-bmp&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.bot&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-bot&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.c4t&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-c4t&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.c90&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-c90&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cal&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-cals&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cat&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/s-pki.seccat&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cdf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-netcdf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cdr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-cdr&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cel&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-cel&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cer&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-x509-ca-cert&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cg4&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-g4&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cgm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-cgm&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cit&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-cit&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.class&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java/*&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cmp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-cmp&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cmx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-cmx&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cot&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-cot&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.crl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/pkix-crl&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.crt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-x509-ca-cert&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.csi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-csi&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.css&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/css&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.cut&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-cut&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dbf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-dbf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dbm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-dbm&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dbx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-dbx&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dcd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dcx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-dcx&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.der&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-x509-ca-cert&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dgn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-dgn&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dib&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-dib&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dll&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-msdownload&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.doc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/msword&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dot&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/msword&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.drw&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-drw&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dtd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dwf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Model/vnd.dwf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dwg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-dwg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dxb&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-dxb&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.dxf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-dxf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.edn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.adobe.edn&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.emf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-emf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.eml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;message/rfc822&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ent&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.epi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-epi&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.eps&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-ps&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.etd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-ebx&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.exe&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-msdownload&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.fax&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/fax&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.fdf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.fdf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.fif&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/fractals&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.fo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.frm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-frm&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.g4&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-g4&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.gbr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-gbr&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.gcd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-gcd&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.gif&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/gif&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.gl2&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-gl2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.gp4&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-gp4&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.hgl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-hgl&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.hmr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-hmr&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.hpg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-hpgl&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.hpl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-hpl&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.hqx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/mac-binhex40&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.hrf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-hrf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.hta&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/hta&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.htc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/x-component&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.htm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/html&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.html&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/html&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.htt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/webviewhtml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.htx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/html&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.icb&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-icb&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ico&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/x-icon&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.iff&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-iff&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ig4&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-g4&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.igs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-igs&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.iii&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-iphone&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.img&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-img&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ins&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-internet-signup&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.isp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-internet-signup&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.IVF&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-ivf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.java&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java/*&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.jfif&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/jpeg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.jpe&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/jpeg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.jpeg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/jpeg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.jpg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/jpeg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.js&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-javascript&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.jsp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/html&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.la1&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/x-liquid-file&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.lar&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-laplayer-reg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.latex&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-latex&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.lavs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/x-liquid-secure&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.lbm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-lbm&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.lmsff&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/x-la-lms&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ls&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-javascript&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ltr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-ltr&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.m1v&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-mpeg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.m2v&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-mpeg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.m3u&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/mpegurl&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.m4e&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/mpeg4&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mac&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-mac&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.man&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-troff-man&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.math&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mdb&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-mdb&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mfp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-shockwave-flash&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mht&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;message/rfc822&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mhtml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;message/rfc822&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-mi&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mid&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/mid&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.midi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/mid&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mil&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-mil&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mnd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/x-musicnet-download&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mns&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/x-musicnet-stream&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mocha&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-javascript&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.movie&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-sgi-movie&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mp1&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/mp1&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mp2&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/mp2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mp2v&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/mpeg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mp3&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/mp3&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mp4&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/mp4&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mpa&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-mpg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mpd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/-project&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mpe&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-mpeg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mpeg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/mpg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mpg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/mpg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mpga&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/rn-mpeg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mpp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/-project&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mps&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-mpeg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mpt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/-project&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mpv&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/mpg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mpv2&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/mpeg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mpw&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/s-project&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mpx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/-project&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mtx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.mxp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-mmxp&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.net&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/pnetvue&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.nrf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-nrf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.nws&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;message/rfc822&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.odc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/x-ms-odc&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.out&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-out&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.p10&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/pkcs10&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.p12&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-pkcs12&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.p7b&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-pkcs7-certificates&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.p7c&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/pkcs7-mime&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.p7m&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/pkcs7-mime&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.p7r&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-pkcs7-certreqresp&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.p7s&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/pkcs7-signature&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pc5&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-pc5&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pci&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-pci&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pcl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-pcl&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pcx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-pcx&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pdf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/pdf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pdx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.adobe.pdx&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pfx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-pkcs12&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pgl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-pgl&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pic&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-pic&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pko&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application-pki.pko&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-perl&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.plg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/html&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pls&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/scpls&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.plt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-plt&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.png&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/png&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pot&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;applications-powerpoint&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ppa&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vs-powerpoint&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ppm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-ppm&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pps&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application-powerpoint&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ppt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;applications-powerpoint&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-pr&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.prf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/pics-rules&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.prn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-prn&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.prt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-prt&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ps&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/postscript&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ptn&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-ptn&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.pwz&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/powerpoint&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.r3t&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/vnd.rn-realtext3d&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ra&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/vnd.rn-realaudio&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ram&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/x-pn-realaudio&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ras&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-ras&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rat&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/rat-file&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rdf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rec&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.rn-recording&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.red&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-red&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rgb&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-rgb&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rjs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.rn-realsystem-rjs&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rjt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.rn-realsystem-rjt&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rlc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-rlc&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rle&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-rle&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.rn-realmedia&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rmf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.adobe.rmf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rmi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/mid&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rmj&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.rn-realsystem-rmj&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rmm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/x-pn-realaudio&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rmp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.rn-rn_music_package&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.rn-realmedia-secure&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rmvb&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.rn-realmedia-vbr&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rmx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.rn-realsystem-rmx&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rnx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.rn-realplayer&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/vnd.rn-realpix&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rpm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/x-pn-realaudio-plugin&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rsml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.rn-rsml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/vnd.rn-realtext&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rtf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-rtf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.rv&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/vnd.rn-realvideo&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.sam&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-sam&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.sat&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-sat&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.sdp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/sdp&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.sdw&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-sdw&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.sit&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-stuffit&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.slb&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-slb&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.sld&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-sld&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.slk&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;drawing/x-slk&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.smi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/smil&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.smil&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/smil&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.smk&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-smk&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.snd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/basic&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.sol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/plain&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.sor&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/plain&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.spc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-pkcs7-certificates&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.spl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/futuresplash&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.spp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ssm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/streamingmedia&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.sst&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application-pki.certstore&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.stl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/-pki.stl&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.stm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/html&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.sty&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-sty&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.svg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.swf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-shockwave-flash&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.tdf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-tdf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.tg4&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-tg4&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.tga&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-tga&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.tif&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/tiff&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.tiff&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/tiff&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.tld&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.top&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;drawing/x-top&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.torrent&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-bittorrent&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.tsd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.txt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/plain&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.uin&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-icq&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.uls&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/iuls&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.vcf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/x-vcard&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.vda&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-vda&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.vdx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.visio&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.vml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.vpg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-vpeg005&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.vsd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-vsd&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.vss&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.visio&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.vst&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-vst&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.vsw&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.visio&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.vsx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.visio&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.vtx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.visio&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.vxml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wav&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/wav&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wax&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/x-ms-wax&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wb1&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wb1&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wb2&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wb2&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wb3&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wb3&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wbmp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;image/vnd.wap.wbmp&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wiz&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/msword&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wk3&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wk3&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wk4&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wk4&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wkq&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wkq&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wks&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wks&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wm&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-ms-wm&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wma&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/x-ms-wma&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wmd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-ms-wmd&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wmf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wmf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/vnd.wap.wml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wmv&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-ms-wmv&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wmx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-ms-wmx&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wmz&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-ms-wmz&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wp6&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wp6&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wpd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wpd&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wpg&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wpg&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wpl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/-wpl&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wq1&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wq1&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wr1&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wr1&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wri&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wri&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wrk&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-wrk&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ws&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-ws&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.ws2&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-ws&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wsc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/scriptlet&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wsdl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.wvx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;video/x-ms-wvx&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xdp&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.adobe.xdp&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xdr&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xfd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.adobe.xfd&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xfdf&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/vnd.adobe.xfdf&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xhtml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/html&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xls&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-xls&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xlw&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-xlw&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xml&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xpl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;audio/scpls&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xq&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xql&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xquery&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xsd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xsl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xslt&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;text/xml&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.xwd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-xwd&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.x_b&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-x_b&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;.x_t&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;application/x-x_t&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>原帖地址：<a href="https://www.cnblogs.com/lwqstyle/p/16587503.html">https://www.cnblogs.com/lwqstyle/p/16587503.html</a></p>]]></content>
    
    
    <categories>
      
      <category>MinIO</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MinIo</tag>
      
      <tag>tips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>flutter常用插件</title>
    <link href="/2023/05/02/flutter-dependencies/"/>
    <url>/2023/05/02/flutter-dependencies/</url>
    
    <content type="html"><![CDATA[<h1 id="flutter开发中常用的插件"><a href="#flutter开发中常用的插件" class="headerlink" title="flutter开发中常用的插件"></a>flutter开发中常用的插件</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">get</span>    <span class="hljs-comment">#getx框架</span><br><span class="hljs-string">flutter_local_notifications</span>      <span class="hljs-comment">#本地通知</span><br><span class="hljs-string">email_validator</span>     <span class="hljs-comment">#邮箱验证，比较全面</span><br><span class="hljs-string">crypto</span>       <span class="hljs-comment"># 加密算法 SHA-1 、 SHA-224 、 SHA-256 、 SHA-384 、  SHA-512 、 SHA-512/224 、 SHA-512/256、 MD5 、HMAC (i.e. HMAC-MD5, HMAC-SHA1, HMAC-SHA256)</span><br><span class="hljs-string">event_bus</span>    <span class="hljs-comment"># 事件监听  类似于通知</span><br><span class="hljs-string">translator</span>    <span class="hljs-comment">#google翻译</span><br><span class="hljs-string">hive</span>    <span class="hljs-comment">#数据持久化存储</span><br><span class="hljs-string">shared_preferences</span>     <span class="hljs-comment">#数据持久化存储</span><br><span class="hljs-string">image_picker</span>    <span class="hljs-comment">#相册</span><br><span class="hljs-string">sticky_headers</span>   <span class="hljs-comment">#悬浮cell</span><br><span class="hljs-string">flutter_spinkit</span>    <span class="hljs-comment">#加载提示框</span><br><span class="hljs-string">flutter_sound</span>    <span class="hljs-comment">#音频 -》录音、播放</span><br><span class="hljs-string">audio_session</span>    <span class="hljs-comment">#音频硬件配置插件</span><br><span class="hljs-string">connectivity_plus</span>  <span class="hljs-comment">#网络监测</span><br><span class="hljs-string">dio</span>    <span class="hljs-comment">#网络请求库</span><br><span class="hljs-string">http</span>    <span class="hljs-comment">#网络请求库</span><br><span class="hljs-string">flutter_native_splash</span>    <span class="hljs-comment">#启动页</span><br><span class="hljs-string">flutter_picker</span>    <span class="hljs-comment">#时间选择</span><br><span class="hljs-string">flutter_screenutil</span>    <span class="hljs-comment">#屏幕适配</span><br><span class="hljs-string">flutter_easyloading</span>    <span class="hljs-comment">#加载进度框</span><br><span class="hljs-string">flutter_blue</span>    <span class="hljs-comment">#蓝牙</span><br><span class="hljs-string">date_format</span>    <span class="hljs-comment">#日期转换</span><br><span class="hljs-string">app_settings</span>    <span class="hljs-comment">#跳转到系统设置界面</span><br><span class="hljs-string">path_provider</span>    <span class="hljs-comment">#文件管理</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>flutter</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>负载均衡冲突</title>
    <link href="/2023/05/02/cloud-loadBalancerConflict/"/>
    <url>/2023/05/02/cloud-loadBalancerConflict/</url>
    
    <content type="html"><![CDATA[<h1 id="负载均衡冲突"><a href="#负载均衡冲突" class="headerlink" title="负载均衡冲突"></a>负载均衡冲突</h1><p>nacos使用ribbon负载均衡<br>而openfeign在新版中改用spring-cloud-loadbalancer<br>两者同时使用需要将nacos的ribbon排除</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- nacos客户端依赖包 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">exclusions</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">exclusion</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.cloud<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-ribbon<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">exclusion</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">exclusions</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>SpringCloud</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Bug</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/05/02/hello-world/"/>
    <url>/2023/05/02/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
